<template>
<van-cell-group wx:if="{{addressList.length}}" border="{{ false }}" inset>
  <van-cell
    wx:for="{{ addressList }}"
    wx:key="_id"
    title="{{ item.address.name }}"
    label="{{ item.name + '   ' + item.phone }}"
    value-class="value-class"
    title-width="{{isCanChoose ? '560rpx' : '100%'}}"
    clickable="{{isCanChoose}}"
    center
    bind:click="CellClickHandle(item)"
  >
    <van-checkbox
      wx:if="{{isCanChoose}}"
      checked-color="#FF9671"
      value="{{ item.checked }}"
      custom-class="address-checkbox"
    />
  </van-cell>
</van-cell-group>
<view wx:else class="loading empty">
  <van-empty description="暂无数据，去新增一个吧" />
</view>
<view wx:if="{{showBottomBtn}}" class="btn-container">
  <van-button round type="primary" block bind:tap="openAddPage">
    去新增
  </van-button>
</view>
<view wx:elif="{{showBottomDivder}}"  class="btn-container">
  <van-divider contentPosition="center" bind:tap="openAddPage">去新增</van-divider>
</view>
</template>

<script>
import mpx, { createComponent, onShow } from '@mpxjs/core'
import store from '@/store'
import AddAddressUrl from '@/subpackages/address-manager/pages/add-address.mpx?resolve'

createComponent({
  properties: {
    isCanChoose: {
      type: Boolean,
      value: true
    },
    showBottomBtn: {
      type: Boolean,
      value: true
    },
    showBottomDivder: {
      type: Boolean,
      value: false
    }
  },
  computed: {
    ...store.mapState(['addressList'])
  },
  methods: {
    ...store.mapMutations(['updateAddressList']),
    CellClickHandle(arg) {
      if (!this.isCanChoose) return
      const list = JSON.parse(JSON.stringify(this.addressList))
      list.forEach(item => {
        item.checked = item.id === arg.id ? !item.checked : false
      })
      this.updateAddressList(list)
      this.triggerEvent('choose-item', arg)
    },
    openAddPage() {
      mpx.navigateTo({
        url: AddAddressUrl
      })
    }
  }
})

</script>

<style lang="stylus">
.loading
  width 100%
  height 50%
  display flex
  justify-content center
  align-items center
  min-height 400rpx
.empty
  width 100%
  height 70%
.checkbox
  float right
.value-class
  display flex
  justify-content flex-end
.btn-container
  padding 32rpx 32rpx 0 32rpx
  box-sizing border-box
</style>

<script type="application/json">
  {
    "usingComponents": {
      "van-empty": "@vant/weapp/empty/index",
      "van-loading": "@vant/weapp/loading/index",
      "van-button": "@vant/weapp/button/index",
      "van-checkbox": "@vant/weapp/checkbox/index",
      "van-checkbox-group": "@vant/weapp/checkbox-group/index",
      "van-cell": "@vant/weapp/cell/index",
      "van-cell-group": "@vant/weapp/cell-group/index",
      "van-divider": "@vant/weapp/divider/index"
    }
  }
</script>
