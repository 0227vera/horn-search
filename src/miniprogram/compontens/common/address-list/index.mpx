<template>
<van-cell-group wx:if="{{addressList.length}}" border="{{ false }}" inset="{{inset}}">
  <view wx:for="{{ addressList }}"  wx:key="id" class="item">
    <van-cell
      size="large"
      title="{{ item.address.detail }}"
      label="{{ item.name + '   ' + item.phone }}"
      value-class="value-class"
      title-width="{{isCanChoose ? '560rpx' : '100%'}}"
      clickable="{{isCanChoose}}"
      center
      bind:click="CellClickHandle(item)"
    >
      <van-checkbox
        wx:if="{{isCanChoose}}"
        checked-color="#1989fa"
        value="{{ item.checked }}"
        custom-class="address-checkbox"
      />
    </van-cell>
    <view class="opt" wx:if="{{showOptBtn}}">
      <view class="checked" wx:if="{{item.checked}}">默认</view>
      <view class="btns">
        <van-button
          wx:for="{{buttons}}"
          size="small"
          wx:for-item="b"
          style="margin-left: 8rpx"
          round
          type="{{b.type || 'default'}}"
          catchtap="clickBtn(item, b)"
          icon="{{b.icon || ''}}"
        >
          {{b.text}}
        </van-button>
      </view>
    </view>
  </view>
</van-cell-group>
<view wx:else class="empty">
  <van-empty description="暂无数据，去新增一个吧" />
</view>
<view wx:if="{{showBottomBtn}}" class="btn-container">
  <van-button round type="primary" block bind:tap="openAddPage">
    去新增
  </van-button>
</view>
<view wx:elif="{{showBottomDivder}}"  class="btn-container">
  <van-divider contentPosition="center" bind:tap="openAddPage">去新增</van-divider>
</view>
<van-dialog id="van-dialog" />
</template>

<script>
import mpx, { createComponent, onShow } from '@mpxjs/core'
import store from '@/store'
import AddAddressUrl from '@/subpackages/address-manager/pages/add-address.mpx?resolve'
import Dialog from '@vant/weapp/dialog/dialog'
import { updateUserInfo } from '@/api'

createComponent({
  properties: {
    isCanChoose: {
      type: Boolean,
      value: true
    },
    showBottomBtn: {
      type: Boolean,
      value: true
    },
    showBottomDivder: {
      type: Boolean,
      value: false
    },
    inset: {
      type: Boolean,
      value: true
    },
    showOptBtn: {
      type: Boolean,
      value: false
    }
  },
  data: {
    buttons: [{
      text: '编辑',
      id: 'edit',
      icon: 'edit',
      type: 'primary'
    }, {
      text: '删除',
      id: 'delete',
      icon: 'delete-o',
      type: 'danger'
    }]
  },
  computed: {
    ...store.mapState(['addressList'])
  },
  attached() {
    const item = this.addressList.find(item => item.checked)
    if (item?.id) {
      this.triggerEvent('choose-item', item)
    }
  },
  methods: {
    ...store.mapMutations(['setState']),
    CellClickHandle(arg) {
      if (!this.isCanChoose) return
      const list = JSON.parse(JSON.stringify(this.addressList))
      list.forEach(item => {
        item.checked = item.id === arg.id ? !item.checked : false
      })
      this.setState({
        addressList: list
      })
      this.triggerEvent('choose-item', arg)
    },
    clickBtn(item, btn) {
      const actions = {
        edit: () => {
          mpx.navigateTo({
            url: `${AddAddressUrl}?id=${item.id}`
          })
        },
        delete: async () => {
          try {
            await Dialog.confirm({
              title: '提示',
              message: `确定删除当前地址吗？`
            })
            const list = JSON.parse(JSON.stringify(this.addressList))
            const newList = list.filter(f => f.id !== item.id)
            mpx.showLoading({
              title: '删除中'
            })
            const res = await updateUserInfo({
              address: newList
            })
            mpx.hideLoading()
            this.setState({
              addressList: newList
            })
          } catch (error) {
          }
        }
      }
      actions?.[btn.id]?.()
    },
    openAddPage() {
      mpx.navigateTo({
        url: AddAddressUrl
      })
    }
  }
})

</script>

<style lang="stylus">
.empty
  width 100%
  display flex
  justify-content center
  align-items center
  min-height 400rpx
  height 70%
.checkbox
  float right
.item
  background #ffffff
  margin-top 16rpx
  border-radius 20rpx
  overflow hidden
.opt
  display flex
  align-items center
  padding 16rpx

  .checked
    background #07c160
    padding 4rpx 10rpx
    border-radius 8rpx
    color #ffffff
    font-size 28rpx
  .btns
    flex 1
    display flex
    justify-content flex-end
.value-class
  display flex
  justify-content flex-end
.btn-container
  padding 32rpx 32rpx 0 32rpx

</style>

<script type="application/json">
  {
    "usingComponents": {
    },
    "componentPlaceholder": {
    }
  }
</script>
