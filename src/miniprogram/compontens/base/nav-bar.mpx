<template>
  <view
    class="nav-bar"
    wx:style="{{ navStyle }}"
  >
    <view wx:if="{{navBarStyle.lefticon}}" class="left" bindtap="backClick">
      <van-icon name="{{navBarStyle.lefticon}}" />
    </view>
    <view class="title" style="color: {{ navBarStyle.color }};" bind:tap="clickTitle">
      <view class="title-content">
        {{ navBarStyle.title }}
      </view>
      <van-icon name="arrow-down" wx:if="{{navBarStyle.showDropdown}}" />
    </view>
  </view>
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import store from '@/store'

createComponent({
  computed: {
    ...store.mapState(['navBarStyle']),
    navStyle() {
      return {
        height: `${this.navBarStyle.height}px`,
        top: `${this.navBarStyle.top}px`,
        'padding-bottom': `${this.navBarStyle.paddingBottom}px`,
        background: `${this.navBarStyle.bg}`
      }
    }
  },
  methods: {
    ...store.mapMutations(['setNavBarStyle', 'setCurrentKey']),
    backClick() {
      if (this.navBarStyle.clickLeft) {
        this.navBarStyle.clickLeft()
        return
      }
      this.setCurrentKey('home')
      this.setNavBarStyle({
        title: '',
        clickLeft: null
      })
    },
    clickTitle() {
      if (this.navBarStyle.showDropdown) {
        this.navBarStyle.clickDropdown?.()
      }
    }
  }
})
</script>

<style lang="stylus">
.nav-bar
  position fixed
  display flex
  align-items center
  justify-content center
  width 100%
  z-index 0
  overflow hidden
  top 0
  font-weight bold
  color #000000
  .left
    position absolute
    display flex
    align-items center
    justify-content center
    left 18rpx
    width 84rpx
    height 52rpx
    font-size 36rpx
    border-radius 32rpx
    background rgba(255, 255, 255, 0.80)
  .title
    font-size 32rpx
    font-weight bold
    overflow hidden
    white-space nowrap
    text-align center
    display flex
    align-items center
    justify-content center
</style>

<script name="json">
module.exports = {
  component: true,
  usingComponents: {
  }
}
</script>
