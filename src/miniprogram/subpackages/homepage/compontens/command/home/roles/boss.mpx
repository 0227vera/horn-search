
<template>
  <van-cell-group class="form" custom-class="home-cell-group-container" style="background:#fff">
    <van-field
      label="品类名称"
      required
      value="{{ updateObj.categoryName }}"
      placeholder="请输入自定义品类的名称"
      input-align="right"
      bind:change="onFieldChange"
      id="categoryName"
      center
      disabled
      wx:if="{{updateObj.category === '10'}}"
    />
    <van-field
      label="单价"
      title-width="80rpx"
      required
      value="{{ updateObj.price }}"
      placeholder="请输入计时或者计件的单价"
      type="digit"
      input-align="right"
      bind:change="onFieldChange"
      id="price"
      center
    >
      <van-dropdown-menu slot="button">
        <van-dropdown-item bind:change="changeUnit" value="{{ updateObj.priceUnit }}" options="{{ unitList }}" />
      </van-dropdown-menu>
    </van-field>
    <van-field
      label="位置"
      title-width="80rpx"
      required
      is-link
      readonly
      value="{{updateObj.poi.name}}"
      input-align="right"
      placeholder="请点击进入输入我的详细地址"
      bind:tap="showPopupContainer('address')"
    />
    <van-field
      label="电话"
      title-width="80rpx"
      required
      value="{{ updateObj.tel }}"
      type="number"
      placeholder="请输入联系方式"
      input-align="right"
      bind:change="onFieldChange"
      id="tel"
    />
    <van-field
      label="截止时间"
      title-width="120rpx"
      is-link
      readonly
      value="{{ timeInfo }}"
      placeholder="点击确定截止时间"
      bind:tap="onTimeClick"
      input-align="right"
    />
    <van-cell title="图片或者视频展示" value="{{imagesValue}}" border="{{false}}" />
    <view class="image-container">
      <view class="iamge-content">
        <van-uploader
          bind:after-read="afterRead"
          accept="media"
          deletable
          disabled="{{uploaderDisabled}}"
        />
        <view class="imgurl-container" wx:for="{{updateObj.images}}" wx:key="*this">
          <van-image
            bind:click="previewMedia(index)"
            width="80"
            height="80"
            src="{{item}}"
            radius="8"
            fit="cover"
          />
          <van-icon name="clear" bindtap="clearImg(item)" class="image-clear-icon"/>
        </view>
      </view>
    </view>
    <van-field
      label="要求"
      title-width="60rpx"
      value="{{ updateObj.note }}"
      placeholder="请输入您对所招工人的要求或者服装的要求"
      input-align="right"
      type="textarea"
      autosize
      id="note"
      bind:change="onFieldChange"
    />
    <van-cell>
      <van-button round type="primary" block bind:tap="submitData">发布</van-button>
    </van-cell>
  </van-cell-group>
  <van-popup
    show="{{ showPopup }}"
    round
    position="bottom"
    bind:close="closePopupContainer"
  >
    <van-datetime-picker
      wx:if="{{popupType === 'time'}}"
      type="datetime"
      title="选择截止时间"
      value="{{ currentDate }}"
      min-date="{{ minDate }}"
      bind:input="onTimeInput"
      bind:confirm="onTimeConfirm"
      bind:cancel="closePopupContainer"
      formatter="{{formatter}}"
    />
    <view wx:elif="{{popupType === 'address'}}">
      <van-nav-bar
        left-text="取消"
        right-text="确定"
        title="请选择地址"
        bind:click-left="closePopupContainer"
        bind:click-right="onAddressClickRight"
        safe-area-inset-top="{{false}}"
      />
      <address-list showBottomBtn="{{false}}" showBottomDivder bind:choose-item="addressChange" />
    </view>
  </van-popup>
  <service-notice wx:ref="serviceNotice" tmplIds="{{tmplIds}}" />
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import { fileUpload, addRelease, updateRelease } from '@/api'
import { ORDER_UPDATE } from '@/setting/noticeInfo.js'
const store = getApp().globalStore

createComponent({
  properties: {
    category: {
      type: String,
      value: ''
    },
    categoryName: {
      type: String,
      value: ''
    }
  },
  data: {
    showPopup: false,
    tmplIds: [ORDER_UPDATE],
    popupType: '',
    mainActiveIndex: 0,
    selectedOptions: [],
    minDate: Date.now(),
    currentDate: Date.now(),
    address: {},
    uploaderDisabled: false,
    formatter(type, value) {
      const types = {
        year: '年',
        month: '月',
        day: '日',
        hour: '时',
        minute: '分'
      }
      return `${value}${types[type] || ''}`
    },
    unitList: [
      { text: '元/件', value: '元/件' },
      { text: '元/小时', value: '元/小时' },
      { text: 'K/月', value: 'K/月' }
    ],
    updateObj: {
      category: '',
      categoryName: '',
      note: '',
      price: '',
      priceUnit: '元/件',
      tel: '',
      ownTime: '',
      ownTimeName: '',
      images: [],
      poi: {}
    }
  },
  watch: {
    category(val) {
      this.updateObj.category = val
    },
    categoryName(val) {
      // if (this.updateObj.category === '10') {
      //   this.updateObj.categoryName = ''
      //   return
      // }
      this.updateObj.categoryName = val
    }
  },
  computed: {
    ...store.mapState(['adInfo']),
    imagesValue() {
      if (this.updateObj.images.length) {
        return `已上传${this.updateObj.images.length}张图片`
      }
      return '点击下方可上传图片'
    },
    timeInfo() {
      if (this.updateObj.ownTime) {
        const time = new Date(this.updateObj.ownTime)
        const year = time.getFullYear()
        const month = time.getMonth() + 1
        const day = time.getDate()
        const hour = time.getHours()
        const min = time.getMinutes()
        return `${year}年${month}月${day}日${hour}时${min}分`
      }
      return ''
    }
  },
  async attached() {
    await this.setLocation()
    this.updateObj.poi = {
      ...this.adInfo.location,
      name: this.adInfo.address
    }
  },
  methods: {
    ...store.mapActions(['setLocation', 'getReleaseList']),
    ...store.mapMutations(['setState']),
    // note: 修改字段值
    onFieldChange(e) {
      this.updateObj[e.target.id] = e.detail
    },
    changeUnit(e) {
      this.updateObj.priceUnit = e.detail
    },
    // note: 图片相关处理
    async afterRead(e) {
      this.uploaderDisabled = true
      const res = await fileUpload(e.detail.file.url)
      this.updateObj.images.push(res.fileID)
      this.uploaderDisabled = false
    },
    clearImg(item) {
      this.updateObj.images = this.updateObj.images.filter(f => f !== item)
    },
    // note: 弹窗处理
    showPopupContainer(type) {
      this.setState({
        showBottomNav: false
      })
      this.showPopup = true
      this.popupType = type
    },
    closePopupContainer() {
      this.showPopup = false
      this.setState({
        showBottomNav: true
      })
    },
    // note: 分类处理
    changeComponent(e) {
      const { value, text } = e.detail
      this.updateObj.category = value
      this.updateObj.categoryName = text
    },
    // note: 时间处理
    onTimeClick() {
      this.showPopupContainer('time')
      this.currentDate = this.updateObj.ownTime || this.currentDate
    },
    onTimeInput(e) {
      this.currentDate = e.detail
    },
    onTimeConfirm() {
      this.updateObj.ownTime = this.currentDate
      this.updateObj.ownTimeName = this.timeInfo
      this.closePopupContainer()
    },
    // note: 地址处理
    onAddressClickRight() {
      this.closePopupContainer()
      this.updateObj.poi = this.address.address
      this.updateObj.tel = this.address.phone
    },
    addressChange(e) {
      const { detail } = e || {}
      this.address = detail
    },
    validate() {
      const result = {
        success: false,
        text: ''
      }
      if (!this.updateObj.category) {
        result.text = '请选择类别'
        return result
      }
      if (this.updateObj.category === '10' && !this.updateObj.categoryName) {
        result.text = '请输入自定义品类名称'
        return result
      }
      if (!this.updateObj.price) {
        result.text = '请输入单价'
        return result
      }
      if (!this.updateObj.tel) {
        result.text = '请输入手机号'
        return result
      }
      if (!/^(?:(?:\+|00)86)?1[3-9]\d{9}$/.test(this.updateObj.tel)) {
        result.text = '请输入正确的手机号'
        return result
      }
      result.success = true
      return result
    },
    previewMedia(index) {
      console.log(index, this.updateObj.images)
      wx.previewMedia({
        current: index,
        sources: this.updateObj.images.map(item => ({
          url: item
        }))
      })
    },
    // note: 提交操作
    async submitData() {
      console.log(this.updateObj)
      const vali = this.validate()
      if (!vali.success) {
        mpx.showToast({
          title: vali.text,
          icon: 'none'
        })
        return
      }
      mpx.showLoading({
        title: '提交中...',
        mask: true
      });
      const subscribe = await this.$refs.serviceNotice?.showServiceNotice?.()
      const res = await addRelease({ ...this.updateObj, status: 1, subscribeInfo: subscribe })
      mpx.hideLoading()
      if (res.code === 200) {
        const self = this
        mpx.showToast({
          icon: 'success',
          title: '您已发布成功!',
          duration: 1000,
          complete: async () => {
            mpx.showLoading({
              title: '正在为您推送……',
              mask: true
            })
            await updateRelease({
              _id: res.data,
              status: '2'
            })
            mpx.hideLoading()
            self.getReleaseList()
            self.triggerEvent('release-finish', res.data)
          }
        })
      } else {
        mpx.showToast({
          title: res.msg,
          icon: 'none'
        })
      }
    }
  }
})
</script>
<style lang="stylus">
.submit
  margin-top 32rpx
  margin-bottom 20rpx
.image-container
  background #ffffff
  padding 20rpx 32rpx
  box-sizing border-box
  .iamge-content
    border-bottom 1px solid #ebedf0
    display flex
    flex-wrap wrap
.imgurl-container
  position relative
  margin 0 8px 8px 0
  .image-clear-icon
    position absolute
    top 0
    right 0
    color #fff
    font-size 40rpx
</style>

<script type="application/json">
  {
    "usingComponents": {
      "service-notice": "@/compontens/common/service-notice",
      "address-list": "@/compontens/common/address-list",
      "custom-container": "@/compontens/base/custom-container",
      "van-cell": "@vant/weapp/cell/index",
      "van-cell-group": "@vant/weapp/cell-group/index",
      "van-uploader": "@vant/weapp/uploader/index",
      "van-field": "@vant/weapp/field/index",
      "van-image": "@vant/weapp/image/index",
      "van-icon": "@vant/weapp/icon/index",
      "van-popup": "@vant/weapp/popup/index",
      "van-cascader": "@vant/weapp/cascader/index",
      "van-datetime-picker": "@vant/weapp/datetime-picker/index",
      "van-nav-bar": "@vant/weapp/nav-bar/index",
      "van-button": "@vant/weapp/button/index",
      "van-dropdown-menu": "@vant/weapp/dropdown-menu/index",
      "van-dropdown-item": "@vant/weapp/dropdown-item/index",
      "category-list": "@/compontens/common/category-list"
    }
  }
</script>
