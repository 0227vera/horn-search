
<template>
  <view class="container">
    <view wx:if="{{loading}}" class="loading">
      <van-loading type="spinner" color="#1989fa" vertical>加载中...</van-loading>
    </view>
    <view wx:elif="{{list.length}}" class="list">
      <van-card
        wx:for="{{list}}"
        wx:key="*this"
        tag="{{item.tag}}"
        thumb="{{item.thumb}}"
        thumb-mode="scaleToFill"
        price="{{item.price + item.priceUnit}}"
      >
        <view slot="title">
          <view class="item-info">
            <text class="item-info-title">地址：</text>
            <text>{{item.poi.name}}</text>
          </view>
        </view>
        <view slot="desc">
          <view class="item-info">
            <text class="item-info-title">要求：</text>
            <text>{{item.note}}</text>
          </view class="item-info">
          <view wx:if="{{item.category === '10'}}" class="item-info">
            <text class="item-info-title">类别：</text>
            <text>{{item.categoryName}}</text>
          </view>
        </view>
        <view wx:if="{{item.tags}}" slot="tags" class="tags">
          <view wx:for="{{item.tags}}" wx:for-item="tag" class="tags-item">
            <view>{{tag.text}}</view>
          </view>
        </view>
        <view slot="footer">
          <van-button size="mini" style="margin-right: 8rpx" round type="primary" bind:tap="makePhone(item)">打电话</van-button>
          <van-button size="mini" style="margin-right: 8rpx" round bind:tap="gotoAddress(item)">导航前去</van-button>
          <van-button size="mini" round bind:tap="gotoDetail(item)">查看详情</van-button>
        </view>
      </van-card>
    </view>
    <view wx:else class="loading empty">
      <van-empty description="暂无数据，去发布一个空闲时间吧" bind:tap="gotoRelease" />
    </view>
  </view>
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import { getReleaseList, updateRelease } from '@/api'
import store from '@/store'
import makePhoneToBoss from '@/utils/makePhoneToBoss'
import unreadFun from '@/utils/unread'

createComponent({
  properties: {
    category: {
      type: String,
      value: ''
    }
  },
  data: {
    loading: true,
    list: []
  },
  computed: {
    ...store.mapState(['openid'])
  },
  watch: {
    category() {
      this.changeComponent()
    }
  },
  attached() {
    unreadFun()
  },
  methods: {
    async changeComponent() {
      this.loading = true
      this.list = []
      const res = await getReleaseList({ category: this.category })
      this.loading = false
      this.list = (res.data?.list || []).map(item => {
        item.tag = item.calllist?.length ? `已有${item.calllist.length}人呼叫` : '暂无人呼叫'
        item.thumb = item.images[0] || 'cloud://cloud1-0gfibr1283141-0b78337d158.636c-cloud1-0gfibr1283141-0b78337d158-1307055684/image-cdn/none.png'
        if (item.calllist) {
          const isCall = item.calllist.find(f => f.openid === this.openid)
          if (isCall) {
            item.tags = [{
              text: `您已呼叫${isCall.times}次`
            }]
          }
        }
        if (item.readlist) {
          const isRead = item.readlist.find(f => f.openid === this.openid)
          if (isRead) {
            if (item.tags) {
              item.tags.push({
                text: `您已阅读${isRead.times}次`
              })
            } else {
              item.tags = [{
                text: `您已阅读${isRead.times}次`
              }]
            }
          }
        }
        return item
      })
    },
    async makePhone(item) {
      makePhoneToBoss(item)
    },
    gotoAddress(item) {
      wx.openLocation({
        latitude: item.poi.location.lat,
        longitude: item.poi.location.lat,
        name: item.poi.name,
        address: item.poi.name
      })
    },
    gotoDetail(item) {
      mpx.navigateTo({ url: `/order-detail/pages/detail-to-worker?id=${item._id}&isBack=true` })
    },
    gotoRelease(item) {
      mpx.navigateTo({ url: `/release/pages/worker` })
    }
  }
})
</script>

<style lang="stylus" scoped>
.container
  padding-bottom 50rpx
.loading
  width 100%
  height 70vh
  display flex
  align-items center
  justify-content center
.tags
  display flex
  margin-bottom 10rpx
  &-item
    color red
    font-size 20rpx
    border 2rpx dashed red
    padding 4rpx 6rpx
    border-radius 4rpx
    margin-right 6rpx
    background rgba(0,0,0,0.1)
.item-info
  margin-bottom 8rpx
  &-title
    font-weight 500
.sub-container
  width 100%
  height 80%
  display flex
  flex-direction column
  align-items center
  justify-content center
  .img
    width 540rpx
    margin-bottom 40rpx
</style>

<script type="application/json">
  {
    "usingComponents": {
      "van-loading": "@vant/weapp/loading/index",
      "van-card": "@vant/weapp/card/index",
      "van-button": "@vant/weapp/button/index",
      "van-empty": "@vant/weapp/empty/index"
    },
    "disableScroll": true
  }
</script>
