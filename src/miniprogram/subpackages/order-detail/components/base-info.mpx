<template>
<van-cell-group border="{{false}}">
  <van-cell
    wx:for="{{renderList}}"
    title-width="{{item.titleWidth || '120rpx'}}"
    wx:key="_id"
    title="{{item.title}}"
    value="{{item.value}}"
    clickable="{{item.islink}}"
    is-link="{{item.islink}}"
    value-class="right-class"
  />
</van-cell-group>
  <nav-footer list="{{footerList}}" />
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import store from '@/store'

createComponent({
  properties: {
    orderData: {
      type: Object,
      value: {}
    }
  },
  computed: {
    ...store.mapState(['fromOrigin']),
    renderList() {
      const {
        categoryName, categorySub, categoryType, categoryTypeName, categoryNum, priceMin, priceMax, price, priceUnitName, num, numMin, numMax, origin, poi, tel, images, note, add, calllist, company,
        factoryScaleName, factoryScale, people, area, cooperTypeName, fabricPropName, productTypeName, orderTypeName, color, code,
        deposit, device, floor, peopleMin, peopleMax, times
      } = this.orderData
      const list = [{
        title: '位置',
        value: poi.detail || poi.address
      }]
      if (this.fromOrigin === 'bossWorker') {
        // note: 岗位
        let categoryText = categoryName
        if (categorySub) {
          categoryText += `(${categorySub})`
        }
        if (categoryNum) {
          categoryText += `-${categoryNum}人`
        }
        if (categoryTypeName) {
          categoryText += `-${categoryTypeName}`
        }
        list.push({
          title: '岗位',
          value: categoryText
        })
        // note: 价格
        let priceText = ''
        let priceTitle = categoryType === '2' ? '薪资' : '单价'
        if (priceMin && priceMax) {
          priceText = `${priceMin}${priceUnitName} ~ ${priceMax}${priceUnitName}`
        } else if (price) {
          priceText = `${price}${priceUnitName}`
        }
        list.push({
          title: priceTitle,
          value: priceText
        })
        // note: 数量
        if (num) {
          list.push({
            title: '数量',
            value: `${num}件`
          })
        }
        // note: 货源
        if (origin) {
          list.push({
            title: '货源(品质层次)',
            value: origin,
            titleWidth: '240rpx'
          })
        }
        if (note) {
          list.push({
            title: '岗位要求',
            value: note
          })
        }
        if (add) {
          list.push({
            title: '待遇补充',
            value: add
          })
        }
      } else if (this.fromOrigin === 'factoryCooper') {
        let factoryScaleText = factoryScaleName
        if (factoryScale === '1') {
          people && (factoryScaleText += `(${people}人以上)`)
        } else if (factoryScale === '2') {
          people && (factoryScaleText += `(${people}人左右)`)
        }
        list.push({
          title: '工厂规模',
          value: factoryScaleText
        })
        list.push({
          title: '地域要求',
          value: area
        })
        list.push({
          title: '合作类型',
          value: cooperTypeName
        })
        list.push({
          title: '产品类型',
          value: productTypeName
        })
        list.push({
          title: '面料属性',
          value: fabricPropName
        })
        list.push({
          title: '生产数量',
          value: `${num}件(左右)`
        })
        if (price) {
          list.push({
            title: '单价',
            value: `${price}元/件`
          })
        }
        if (color && code) {
          list.push({
            title: '颜色码数',
            value: `${color}色${code}码`
          })
        }
        orderTypeName && list.push({
          title: '订单类型',
          value: orderTypeName
        })
        if (add) {
          list.push({
            title: '合作概述',
            value: add
          })
        }
      } else if (this.fromOrigin === 'leaseTransfer') {
        list.push({
          title: '类别',
          value: `${categoryName}${categorySub ? `(${categorySub})` : ''}`
        })
        list.push({
          title: '面积',
          value: area + '平米'
        })
        list.push({
          title: '楼层',
          value: floor + '楼'
        })
        list.push({
          title: '租金',
          value: `${price}${priceUnitName}`
        })
        list.push({
          title: '押金',
          value: `${deposit}个月`
        })
        list.push({
          title: '设备',
          value: device
        })
        if (add) {
          list.push({
            title: '补充',
            value: add
          })
        }
      } else if (this.fromOrigin === 'usedDetect') {
        list.push({
          title: '设备名称',
          value: `${categoryName}${categorySub ? `(${categorySub})` : ''}`
        })
        if (price) {
          list.push({
            title: '价格',
            value: `${price}元`
          })
        }
        if (note) {
          list.push({
            title: '产品概述',
            value: note
          })
        }
      } else if (this.fromOrigin === 'tailings') {
        list.push({
          title: '货品类别',
          value: `${categoryName}${categorySub ? `(${categorySub})` : ''}`
        })
        if (times.length) {
          const [start, end] = times
          let text = ''
          if (start && end) {
            text = `${start}~${end}`
          } else if (start) {
            text = `${start}以后`
          } else if (end) {
            text = `${end}以前`
          }
          text && list.push({
            title: '联系时间',
            value: text
          })
        }
        if (note) {
          list.push({
            title: '补充',
            value: note
          })
        }
      }
      if (company) {
        list.push({
          title: '工厂名',
          value: company
        })
      }
      if (this.needList) {
        list.push({
          title: '呼叫情况',
          value: calllist?.length ? `已有${calllist.length}人呼叫` : '暂时无人呼叫'
        })
      }
      return list
    }
  }
})

</script>
<style lang="stylus">
.right-class
  color #000000 !important
  font-weight bold
</style>

<script type="application/json">
  {
    "usingComponents": {
      "van-cell": "@vant/weapp/cell/index?root=vant-page",
      "van-cell-group": "@vant/weapp/cell-group/index?root=vant-page"
    },
    "componentPlaceholder": {
      "van-cell": "view",
      "van-cell-group": "view"
    },
    "navigationStyle": "custom"
  }
</script>
