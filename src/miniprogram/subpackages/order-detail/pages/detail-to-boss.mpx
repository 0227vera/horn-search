<template>
  <custom-container
    title="{{pageTitle}}"
    lefticon="arrow-left"
    containerBg="linear-gradient(#E3E0F3, #E3E0F3 89px, #ffffff)"
    clickLeft="{{clickLeft}}"
  >
    <view wx:if="{{loading}}" class="status">
      <van-loading type="spinner" color="#1989fa" vertical>加载中...</van-loading>
    </view>
    <block wx:else>
      <item-container title="流程信息：">
        <van-steps steps="{{ steps }}" active="{{ active }}" />
      </item-container>
      <item-container title="推送情况：">
        <finder readlist="{{readlist}}" />
      </item-container>
      <item-container wx:if="{{active === 2}}" title="呼叫人信息：">
        <view class="call-container">
          <view wx:for="{{calllist}}" wx:key="opneid" class="call-item">
            <image class="call-item-image" src="{{item.avatarUrl}}"></image>
            <text class="call-item-num">{{item.times}}</text>
          </view>
        </view>
      </item-container>
      <!-- <item-container title="人才市场信息：">
        <worker-list category="{{category}}" />
      </item-container> -->
      <item-container title="基本信息：">
        <base-info orderData="{{orderData}}" />
      </item-container>
      <view class="bottom"></view>
    </block>
  </custom-container>
  <nav-footer list="{{footerList}}" />
  <back-home showShare />
</template>

<script>
import mpx, { createPage } from '@mpxjs/core'
import { getReleaseOneById, updateRelease } from '@/api'
import store from '@/store'

createPage({
  onShareAppMessage() {
    const path = encodeURIComponent(`/order-detail/pages/detail-to-worker?id=${this._id}&fromOrigin=${this.fromOrigin}`)
    return {
      title: `${this.categoryName}${this.categorySub ? `(${this.categorySub})` : ''}-${this.categoryNum}人-${this.categoryTypeName}`,
      path: `/pages/page?type=mp&path=${path}`,
      imageUrl: this.images?.[0] || ''
    }
  },
  data: {
    loading: true,
    orderData: {},
    active: '',
    calllist: [],
    readlist: [],
    category: '',
    status: ''
  },
  async onLoad(params) {
    this.setState({
      fromOrigin: params.fromOrigin
    })
    this.loading = true
    if (!params.id) {
      this.clickLeft()
      return
    }
    this.params = params
    const res = await getReleaseOneById(params)
    this.orderData = res.data
    const { category, categoryName, categorySub, categoryTypeName, categoryNum, images, status, calllist, readlist, _id, OPENID } = res.data || {}
    this.active = status - 1
    this.status = status
    this.category = category
    this.categoryName = categoryName
    this.categoryNum = categoryNum
    this.categorySub = categorySub
    this.categoryTypeName = categoryTypeName
    this.OPENID = OPENID
    this.images = images
    this._id = _id
    this.readlist = readlist
    this.calllist = calllist
    this.loading = false
  },
  computed: {
    ...store.mapState(['steps', 'openid', 'fromOrigin']),
    pageTitle() {
      if (this.active) {
        const desc = this.steps.find(item => +item.status === this.active + 1).desc
        return `订单详情【${desc}】`
      }
      return '订单详情'
    },
    clickLeft() {
      return () => {
        if (this.params.isBack === 'true') {
          mpx.navigateBack()
        } else {
          mpx.reLaunch({
            url: `/homepage/pages/index`
          })
        }
      }
    },
    footerList() {
      return [{
        name: '关单',
        hide: this.status === '4',
        icon: 'passed',
        id: 'close',
        click: async () => {
          if (this.OPENID !== this.openid) {
            mpx.showToast({
              icon: 'none',
              title: '您不是发单人，不可关单'
            })
            return
          }
          const res = await updateRelease({
            _id: this._id,
            status: '4'
          })
          mpx.showToast({
            icon: 'success',
            title: '关单成功'
          })
          mpx.navigateBack()
        }
      }, {
        name: '再来一单',
        icon: 'revoke',
        hide: this.status !== '4',
        id: 'again',
        click: () => {
          console.log('再来一单')
        }
      }, {
        name: '分享给好友',
        icon: 'share-o',
        id: 'share',
        share: true
      }]
    }
  },
  methods: {
    ...store.mapMutations(['setState']),
    clickTel(item) {
      wx.makePhoneCall({
        phoneNumber: item.tel
      })
    }
  }
})

</script>

<style lang="stylus" scoped>
.status
  width 100%
  height 100%
  display flex
  justify-content center
  align-items center
.call-container
  display flex
  box-sizing border-box
  padding 20rpx
.call-item
  position relative
  height 60rpx
  margin-left -10rpx
  &-image
    width 60rpx
    height 60rpx
    border-radius 50%
    border 2rpx solid #fff
  &-num
    position absolute
    top 0
    left 10rpx
    font-size 20rpx
    background red
    width 24rpx
    height 24rpx
    border-radius 50%
    display flex
    align-items center
    justify-content center
    color #ffffff
.title
  width 100%
  height 80rpx
  padding 0 32rpx
  line-height 80rpx
  font-weight 500
  font-size 24rpx
  box-sizing border-box
.proccess
  width 100%
  box-sizing border-box
  padding 0 32rpx
  &-content
    overflow hidden
    border-radius 16rpx
.bottom
  height 160rpx
</style>

<script type="application/json">
  {
    "usingComponents": {
      "custom-container": "@/compontens/base/custom-container",
      "van-cell": "@vant/weapp/cell/index",
      "van-cell-group": "@vant/weapp/cell-group/index",
      "van-image": "@vant/weapp/image/index",
      "van-steps": "@vant/weapp/steps/index",
      "van-loading": "@vant/weapp/loading/index",
      "item-container": "../components/item-container",
      "finder": "@/compontens/base/finder.mpx",
      "worker-list": "../components/worker-list.mpx",
      "nav-footer": "@/compontens/base/nav-footer.mpx",
      "base-info": "../components/base-info.mpx",
      "back-home": "@/compontens/base/back-home.mpx"
    },
    "navigationStyle": "custom"
  }
</script>
