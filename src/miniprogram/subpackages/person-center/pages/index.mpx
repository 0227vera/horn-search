<template>
<custom-container
  title="个人中心"
  lefticon="wap-home"
>
  <view class="navbar">
    <view class="navbar-content">
      <view wx:for="{{navbar}}" wx:key="*this" class="navbar-content-item" wx:if="{{!item.hide}}" bindtap="itemtaphandle(item)">
        <van-icon name="{{item.icon}}" class="navbar-content-item-icon" />
        <view class="navbar-content-item-name">{{item.name}}</view>
      </view>
    </view>
  </view>
  <view class="list">
    <view wx:for="{{list}}" wx:key="*this" class="list-item">
      <van-cell-group inset>
        <van-cell
          size="large"
          wx:for="{{item}}"
          wx:for-item="subitem"
          wx:key="*this"
          title="{{subitem.name}}"
          icon="{{subitem.icon}}"
          value="{{subitem.value}}"
          is-link
          clickable
          bindtap="itemtaphandle(subitem)"
          wx:if="{{!subitem.hide}}"
        />
      </van-cell-group>
    </view>
  </view>
</custom-container>
<van-dialog id="van-dialog" />
<van-dialog
  use-slot
  title="工厂/公司名修改"
  show="{{ show }}"
  show-cancel-button
  bind:close="onClose"
  bind:confirm="onConfirm"
>
  <view class="company-container">
    <van-field
      size="large"
      value="{{ cacheCompany }}"
      label="工厂/公司名"
      type="textarea"
      autosize
      placeholder="请输入工厂/公司名"
      border="{{ false }}"
      bind:change="onCompanyChange"
    />
  </view>
</van-dialog>
</template>

<script>
import mpx, { createPage } from '@mpxjs/core'
import { isAdmin, updateUserInfo } from '@/api'
import Dialog from '@vant/weapp/dialog/dialog'
import jumpAction from '@/utils/jump'
import store from '@/store'

createPage({
  data: {
    showManagerEntry: false,
    show: false,
    cacheCompany: ''
  },
  computed: {
    ...store.mapState(['company', 'homeset']),
    navbar() {
      return [
        {
          name: '主动求职',
          icon: 'manager-o',
          jumptype: 'mp',
          url: '/person-center/pages/person-info'
        },
        {
          name: '城寻客户',
          icon: 'info-o',
          jumptype: 'mp',
          url: '/person-center/pages/company-info'
        }
      ]
    },
    list() {
      return [
        [
          {
            name: '地址管理',
            icon: 'todo-list-o',
            jumptype: 'mp',
            url: '/address-manager/pages/index'
          },
          {
            name: '工厂/公司名',
            icon: 'user-o',
            jumptype: 'company',
            value: this.company
          }
        ],
        [
          {
            name: '关于我们',
            icon: 'question-o',
            jumptype: 'mp',
            url: '/company/pages/index'
          }
        ],
        [
          {
            name: '系统设置',
            icon: 'setting-o',
            jumptype: 'setting'
          }
        ],
        [
          {
            name: '后台管理',
            icon: 'edit',
            hide: !this.showManagerEntry,
            jumptype: 'mp',
            url: '/manager/pages/index'
          }
        ]
      ]
    }
  },
  onLoad() {
    this.isAdmin()
  },
  methods: {
    ...store.mapMutations(['setState']),
    async isAdmin() {
      const res = await isAdmin()
      if (res.data.ADMIN_ID) {
        this.showManagerEntry = true
      }
    },
    itemtaphandle(item) {
      if (item.jumptype === 'company') {
        this.cacheCompany = this.company
        this.show = true
      } else {
        jumpAction(item)
      }
    },
    onClose() {
      this.show = false
    },
    onCompanyChange(e) {
      this.cacheCompany = e.detail
    },
    async onConfirm() {
      mpx.showLoading({ title: '更新中……' })
      const res = await updateUserInfo({
        company: this.cacheCompany
      })
      if (res.code === 200) {
        this.setState({
          company: this.cacheCompany
        })
        mpx.showToast({
          title: '更新成功！'
        })
      } else {
        mpx.showToast({
          title: res.msg,
          icon: 'none'
        })
      }
    }
  }
})
</script>

<style lang="stylus" scoped>
.popupTitle
  width 100%
  height 100rpx
  line-height 100rpx
  text-align center
.navbar
  width 100%
  padding 0 32rpx
  margin-top 16rpx
  .navbar-content
    background #ffffff
    box-shadow 0px 4px 20px 0px rgba(0,0,0,0.4)
    border-radius 16rpx
    display flex
    align-items center
    justify-content space-around
    padding 32rpx
    overflow hidden
    color #000000
    font-weight bold
    .navbar-content-item
      display flex
      flex-direction column
      align-items center
      justify-content center
      color #333
      .navbar-content-item-icon
        font-size 50rpx
      .navbar-content-item-name
        font-size 26rpx
        margin-top 12rpx
.list
  padding-top 32rpx
  &-item
    margin-bottom 16rpx
.company-container
  min-height 100rpx
</style>

<script name="json">
module.exports = {
  usingComponents: {
  },
  "componentPlaceholder": {},
  "navigationStyle": "custom",
  "disableScroll": true
}
</script>
