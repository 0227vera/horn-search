<template>
<custom-container
  title="{{userInfo.nickName || '个人中心'}}"
  lefticon="wap-home"
>
  <view class="userInfo">
    <image class="avatar" wx:if="{{userInfo.avatar}}" bind:tap="openUserInfoEdit" src="{{userInfo.avatar}}"></image>
    <van-icon wx:else class="avatar" bind:tap="openUserInfoEdit" name="user" />
  </view>
  <view class="navbar">
    <view class="navbar-content">
      <view wx:for="{{navbar}}" wx:key="*this" class="navbar-content-item" wx:if="{{!item.hide}}" bindtap="itemtaphandle(item)">
        <van-icon name="{{item.icon}}" class="navbar-content-item-icon" />
        <view class="navbar-content-item-name">{{item.name}}</view>
      </view>
    </view>
  </view>
  <view class="list">
    <view wx:for="{{list}}" wx:key="*this" class="list-item">
      <van-cell-group inset>
        <van-cell
          size="large"
          wx:for="{{item}}"
          wx:for-item="subitem"
          wx:key="*this"
          title="{{subitem.name}}"
          icon="{{subitem.icon}}"
          value="{{subitem.value}}"
          is-link
          clickable
          bindtap="itemtaphandle(subitem)"
          wx:if="{{!subitem.hide}}"
        />
      </van-cell-group>
    </view>
  </view>
  <van-dialog
    use-slot
    show-cancel-button
    show="{{editInfo}}"
    bind:close="onClose"
    bind:confirm="onConfirm"
  >
    <view class="getUserInfo">
      <view class="title">获取头像</view>
      <button open-type="chooseAvatar" class="avatarInfo" bindchooseavatar="onChooseAvatar">
        <image class="avatar" wx:if="{{cacheUserInfo.avatar}}" src="{{cacheUserInfo.avatar}}"></image>
        <van-icon wx:else class="avatar" name="user" />
      </button>
      <view class="nickname">
        <input type="nickname" placeholder="请输入昵称" bind:change="onNameChange" value="{{cacheUserInfo.nickName}}" />
      </view>
    </view>
  </van-dialog>
</custom-container>
</template>

<script>
import mpx, { createPage } from '@mpxjs/core'
import { isAdmin, updateUserInfo, fileUpload } from '@/api'
import jumpAction from '@/utils/jump'
import store from '@/store'

createPage({
  data: {
    showManagerEntry: false,
    editInfo: false,
    cacheUserInfo: {
      nickName: '',
      avatar: ''
    }
  },
  computed: {
    ...store.mapState(['company', 'homeset', 'userInfo']),
    navbar() {
      return [
        {
          name: '主动求职',
          icon: 'gift-o',
          jumptype: 'mp',
          url: '/person-center/pages/person-info'
        },
        {
          name: '城寻客户',
          icon: 'info-o',
          jumptype: 'mp',
          url: '/person-center/pages/company-info'
        }
      ]
    },
    list() {
      return [
        [
          {
            name: '地址管理',
            icon: 'todo-list-o',
            jumptype: 'mp',
            url: '/address-manager/pages/index'
          },
          {
            name: '工厂/公司名',
            icon: 'user-o',
            jumptype: 'company',
            value: this.company
          }
        ],
        [
          {
            name: '关于我们',
            icon: 'question-o',
            jumptype: 'mp',
            url: '/company/pages/index'
          }
        ],
        [
          {
            name: '系统设置',
            icon: 'setting-o',
            jumptype: 'setting'
          }
        ],
        [
          {
            name: '后台管理',
            icon: 'edit',
            hide: !this.showManagerEntry,
            jumptype: 'mp',
            url: '/manager/pages/index'
          }
        ]
      ]
    }
  },
  onLoad() {
    this.isAdmin()
  },
  methods: {
    ...store.mapMutations(['setState']),
    async isAdmin() {
      const res = await isAdmin()
      if (res.data.ADMIN_ID) {
        this.showManagerEntry = true
      }
    },
    async itemtaphandle(item) {
      if (item.jumptype === 'company') {
        const res = await mpx.showModal({
          title: '工厂/公司名修改',
          content: this.company,
          editable: true,
          placeholderText: '请输入工厂/公司名'
        })
        if (res.confirm) {
          mpx.showLoading({ title: '更新中……' })
          const inter = await updateUserInfo({
            company: res.content
          })
          if (inter.code === 200) {
            this.setState({
              company: res.content
            })
            mpx.showToast({
              title: '更新成功！'
            })
          } else {
            mpx.showToast({
              title: res.msg,
              icon: 'none'
            })
          }
        }
      } else {
        jumpAction(item)
      }
    },
    openUserInfoEdit() {
      this.cacheUserInfo.nickName = this.userInfo.nickName
      this.cacheUserInfo.avatar = this.userInfo.avatar
      this.editInfo = true
    },
    async onChooseAvatar(e) {
      const { avatarUrl } = e.detail
      this.cacheUserInfo.avatar = avatarUrl
      try {
        const res = await fileUpload(avatarUrl)
        this.cacheUserInfo.avatar = res.fileID
      } catch (error) {}
    },
    onNameChange(e) {
      const { value } = e.detail
      if (!value.length) {
        return
      }
      this.cacheUserInfo.nickName = value
    },
    onClose() {
      this.editInfo = false
    },
    async onConfirm() {
      const res = await updateUserInfo({
        userInfo: this.cacheUserInfo
      })
      if (res.code === 200) {
        this.setState({
          userInfo: { ...this.cacheUserInfo }
        })
      }
      this.editInfo = false
    }
  }
})
</script>

<style lang="stylus" scoped>
.popupTitle
  width 100%
  height 100rpx
  line-height 100rpx
  text-align center
.navbar
  width 100%
  padding 0 32rpx
  margin-top 16rpx
  .navbar-content
    background #ffffff
    box-shadow 0px 4px 20px 0px rgba(0,0,0,0.4)
    border-radius 16rpx
    display flex
    align-items center
    justify-content space-around
    padding 32rpx
    overflow hidden
    color #000000
    font-weight bold
    .navbar-content-item
      display flex
      flex-direction column
      align-items center
      justify-content center
      color #333
      .navbar-content-item-icon
        font-size 50rpx
      .navbar-content-item-name
        font-size 26rpx
        margin-top 12rpx
.list
  padding-top 32rpx
  &-item
    margin-bottom 16rpx
.company-container
  min-height 100rpx
.userInfo
  display flex
  align-items center
  justify-content center
  margin-bottom -80rpx
  .avatar
    width 120rpx
    height 120rpx
    background #ffffff
    object-fit cover
    border-radius 60rpx
    display flex
    align-items center
    justify-content center
    font-size 60rpx
.getUserInfo
  overflow hidden
  height 360rpx
  display flex
  flex-direction column
  align-items center
  padding 16rpx 32rpx
  bonx-sizing borser-box
  .title
    font-size 36rpx
  .avatarInfo
    width 150rpx
    height 150rpx
    border-radius 75rpx
    padding 0
    background #ffffff
    display flex
    align-items center
    justify-content center
    font-size 80rpx
    border 2rpx solid #eeeeee
    margin-top 24rpx
    &:after
      display none
    .avatar
      width 150rpx
      height 150rpx
      border-radius 75rpx
  .nickname
    width 100%
    margin-top 24rpx
    border 2rpx solid #eeeeee
    height 80rpx
    line-height 80rpx
    box-sizing border-box
    border-radius 16rpx
    display flex
    align-items center
    justify-content flex-start
    padding 0 24rpx
    input
      width 100%
      font-size 36rpx
      display flex
      align-items center
      justify-content flex-start
</style>

<script name="json">
module.exports = {
  usingComponents: {
  },
  "componentPlaceholder": {},
  "navigationStyle": "custom",
  "disableScroll": true
}
</script>
