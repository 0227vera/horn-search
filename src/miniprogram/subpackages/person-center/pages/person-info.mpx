<template>
<custom-container
  title="个人信息"
  containerBg="linear-gradient(to bottom, #8aa7ec, #79b3f4, #ffffff)"
  btnName="{{list.length ? '更新' : '发布'}}"
  bind:footer-btn="release"
>
  <view style="padding-bottom: 100rpx;">
    <van-cell-group inset>
      <!-- 技能相关 -->
      <van-field
        size="large"
        label="技能"
        title-width="80rpx"
        required
        is-link
        readonly
        border="{{false}}"
        value="{{biographical.categoryName}}"
        input-align="right"
        placeholder="请点击选择您擅长的技能"
        bind:tap="showPopupContainer('category')"
      />
      <!-- 位置相关 -->
      <van-field
        size="large"
        label="地址"
        title-width="80rpx"
        required
        is-link
        readonly
        type="textarea"
        autosize
        value="{{biographical.poi.detail}}"
        input-align="right"
        placeholder="请点击输入我的详细地址"
        bind:tap="showPopupContainer('address')"
      />
      <!-- 电话 -->
      <van-field
        size="large"
        label="电话"
        title-width="80rpx"
        required
        value="{{ biographical.tel }}"
        type="number"
        placeholder="请输入联系方式"
        input-align="right"
        bind:change="onFieldChange"
        id="tel"
      />
      <!-- 时间先关 -->
      <van-field
        size="large"
        label="到岗时间"
        title-width="160rpx"
        required
        is-link
        readonly
        border="{{false}}"
        value="{{biographical.time.start}}"
        input-align="right"
        placeholder="请点击选择您能到岗的时间"
        bind:tap="showPopupContainer('time', 'start')"
      />
      <van-field
        size="large"
        label="推送时间"
        title-width="160rpx"
        is-link
        readonly
        border="{{false}}"
        value="{{biographical.time.end}}"
        input-align="right"
        placeholder="请点击选择截止时间点"
        error-message="{{biographical.time.end ? '' : '备注：不填写将为您持续推送，需要您手动关闭推动'}}"
        bind:tap="showPopupContainer('time', 'end')"
      />
      <!-- 补充信息 -->
      <van-field
        size="large"
        label="补充信息"
        title-width="160rpx"
        value="{{ biographical.note }}"
        placeholder="请输入补充信息"
        input-align="left"
        type="textarea"
        autosize
        error-message="{{biographical.note ? '' : '例如：城市可信、技术好、踏实肯干等'}}"
        id="note"
        bind:change="onFieldChange"
      />
    </van-cell-group>
    <view wx:if="{{callListText}}" class="call-container">
      <view class="call-content">
        <mutil-style-text text="{{callListText}}" rules="{{textRules}}" />
      </view>
    </view>
    <view wx:if="{{list.length}}" class="list">
      <van-collapse wx:for="{{list}}" wx:key="id" value="{{ active }}" bind:change="onActiveChange" style="border-radius: 16rpx;">
        <van-collapse-item title="{{item.categoryName}}" name="{{item.id}}">
          <view slot="value" class="switch">
            <view catchtap="onSwitchChange(item.id)" class="switch-content">
              <view wx:if="{{item.status !== 'on'}}" style="margin-right: 16rpx;">已关闭推送</view>
              <van-switch active-color="#07c160" size="36rpx" checked="{{ item.status === 'on' }}" style="margin-bottom: -12rpx;" />
              <view wx:if="{{item.status === 'on'}}" style="color: #07c160; margin-left: 16rpx;">已开启推送</view>
            </view>
          </view>
          <view class="content">
            <view class="content-item">
              推送情况：{{item.status === 'on' ? '正在推送中……' : '已停止推送'}}
            </view>
            <view class="content-item">
              推送时间：{{item.time.start}}{{item.time.end ? ' ~ ' + item.time.end : '以后'}}
            </view>
            <view class="content-item">
              推送情况：已为您推送给所有招工老板
            </view>
          </view>
        </van-collapse-item>
      </van-collapse>
    </view>
  </view>
</custom-container>
<popup
  show="{{showPopup}}"
  type="{{popupType}}"
  timeType="time"
  initActiveId="{{activeId}}"
  minHour="{{minHour}}"
  minMinute="{{minMinute}}"
  initTime="{{initTime}}"
  categoryList="{{categoryList}}"
  max="{{3}}"
  bind:close="closePopupContainer"
  bind:confirm="onConfirmHandle"
/>
<toast wx:ref="toast" text="{{toastText}}" />
<van-dialog id="van-dialog" />
</template>

<script>
import mpx, { createPage } from '@mpxjs/core'
import { updateUserInfo } from '@/api'
import config from '@/constant/release.js'
import store from '@/store'
import dayjs from 'dayjs'
import guid from '@/utils'
import Dialog from '@vant/weapp/dialog/dialog'
import AddAddressUrl from '@/subpackages/address-manager/pages/add-address.mpx?resolve'

createPage({
  data: {
    showPopup: false,
    popupType: '',
    initTime: '',
    minHour: 0,
    minMinute: 0,
    active: [],
    toastText: '',
    textRules: {
      '{x}': {
        style: 'margin: 0 16rpx; font-size: 60rpx; color: #07c160;'
      }
    }
  },
  computed: {
    ...store.mapState(['addressList', 'adInfo', 'biographical']),
    categoryList() {
      return config['findWorker'].category
    },
    list() {
      return this.biographical.list || []
    },
    activeId() {
      return this.biographical.category ? this.biographical.category.split(';') : []
    },
    callList() {
      return this.biographical.callList || []
    },
    callListText() {
      if (this.callList.length) {
        console.log('=======+>', this.callList)
        console.log('=======+>', this.biographical)
        const times = this.callList.reduce((sum, item) => sum + item.times, 0)
        return `您累计被呼叫{${times}}次`
      }
      return ''
    }
  },
  watch: {
    list: {
      handler(val) {
        this.active = val.map(item => item.id)
      },
      immediate: true
    }
  },
  onLoad() {
  },
  async onShow() {
    await this.setLocation()
    if (this.adInfo.address) {
      this.setState({
        biographical: {
          ...this.biographical,
          poi: {
            ...this.adInfo,
            name: this.adInfo.address,
            detail: this.adInfo.address
          }
        }
      })
    }
    this.initAddressPhone()
  },
  methods: {
    ...store.mapMutations(['setState']),
    ...store.mapActions(['setLocation']),
    initAddressPhone() {
      console.log(this.addressList)
      const item = this.addressList.find(item => item.checked)
      if (item?.id) {
        this.setState({
          biographical: {
            ...this.biographical,
            tel: item.phone,
            poi: item.address,
            name: item.name
          }
        })
      }
    },
    onActiveChange(e) {
      this.active = e.detail
    },
    async onSwitchChange(id) {
      const list = JSON.parse(JSON.stringify(this.list))
      const item = list.find(f => f.id === id)
      list.forEach(item => {
        if (item.id === id) {
          item.status = item.status === 'on' ? 'off' : 'on'
        }
      })
      const biographical = JSON.parse(JSON.stringify(this.biographical))
      biographical.list = list
      mpx.showLoading({
        mask: true,
        title: '状态更改中……'
      })
      const res = await updateUserInfo({
        biographical
      })
      if (res.code === 200) {
        if (item.status === 'off') {
          mpx.hideLoading()
          Dialog.confirm({
            title: '提示',
            message: '已为您关闭推送状态，是否需要同时帮您删除这条记录?',
            confirmButtonText: '需要',
            cancelButtonText: '不需要'
          }).then(() => {
            biographical.list = list.filter(f => f.id !== id)
            updateUserInfo({
              biographical
            }).then(() => {
              this.setState({ biographical })
              mpx.showToast({
                mask: true,
                title: '删除成功'
              })
            })
          }).catch(() => {
            this.setState({ biographical })
          })
        } else {
          mpx.showToast({
            mask: true,
            title: '更改成功'
          })
          this.setState({ biographical })
        }
      } else {
        mpx.hideLoading()
      }
    },
    showPopupContainer(type, currentTimeType) {
      if (type === 'time') {
        this.currentTimeType = currentTimeType
        this.initTime = this.biographical.time[currentTimeType]
        if (currentTimeType === 'end' && this.biographical.time.start) {
          if (!this.initTime) {
            this.initTime = dayjs(Date.now()).format('HH:mm')
          }
          this.minHour = +this.biographical.time.start.split(':')[0]
          this.minMinute = +this.biographical.time.start.split(':')[1]
        }
      } else if (!this.addressList.length && type === 'address') {
        mpx.navigateTo({
          url: AddAddressUrl
        })
        return
      }
      this.popupType = type
      this.showPopup = true
    },
    closePopupContainer() {
      this.showPopup = false
    },
    onConfirmHandle({ detail = {} } = {}) {
      const { data, type } = detail
      const actions = {
        category: () => {
          this.setState({
            biographical: {
              ...this.biographical,
              category: data.map(item => item.id).join(';'),
              categoryName: data.map(item => item.text).join(';')
            }
          })
        },
        address: () => {
          this.setState({
            biographical: {
              ...this.biographical,
              poi: data.poi,
              tel: data.tel
            }
          })
        },
        time: () => {
          this.setState({
            biographical: {
              ...this.biographical,
              time: {
                ...this.biographical.time,
                [this.currentTimeType]: data.time
              }
            }
          })
          if (this.currentTimeType === 'start') {
            this.setState({
              biographical: {
                ...this.biographical,
                time: {
                  ...this.biographical.time,
                  end: ''
                }
              }
            })
          }
        }
      }
      actions?.[type]?.()
      this.closePopupContainer()
    },
    onFieldChange(e) {
      this.setState({
        biographical: {
          ...this.biographical,
          [e.target.id]: e.detail
        }
      })
    },
    validate() {
      const telReg = /^(?:(?:\+|00)86)?1[3-9]\d{9}$/
      const result = {
        text: '',
        success: false
      }
      if (!this.biographical.category) {
        result.text = "请选择{技能}"
        return result
      }
      if (!this.biographical.poi.detail) {
        result.text = "请填入{地址}"
        return result
      }
      if (!this.biographical.tel) {
        result.text = "请填入{电话}"
        return result
      }
      if (!telReg.test(this.biographical.tel)) {
        result.text = '请输入{正确的手机号}'
        return result
      }
      if (telReg.test(this.biographical.note)) {
        result.text = '{补充信息}中不可带{电话号码}'
        return result
      }
      result.success = true
      return result
    },
    async release() {
      const vali = this.validate()
      if (!vali.success) {
        this.toastText = vali.text
        setTimeout(() => {
          this.$refs.toast.show()
        }, 0)
        return
      }
      console.log('release', this.biographical)
      const list = JSON.parse(JSON.stringify(this.biographical.list || []))
      list.unshift({
        status: 'on',
        category: this.biographical.category,
        categoryName: this.biographical.categoryName,
        note: this.biographical.note,
        time: this.biographical.time,
        start: +this.biographical.time.start.replace(':', ''),
        end: +this.biographical.time.end.replace(':', ''),
        poi: this.biographical.poi,
        id: guid()
      })
      const biographical = JSON.parse(JSON.stringify(this.biographical))
      biographical.list = list
      const res = await updateUserInfo({
        biographical
      })
      if (res.code === 200) {
        mpx.showToast({
          title: this.list.length ? '更新成功' : '发布成功',
          success: () => {
            this.setState({
              biographical
            })
            mpx.navigateBack()
          }
        })
      }
    }
  }
})
</script>

<style lang="stylus" scoped>
.call-container
  padding 16rpx 32rpx
  margin-top 16rpx
  margin-bottom -32rpx
  .call-content
    background #fff
    padding 32rpx
    font-size 40rpx
    font-weight bold
    border-radius 32rpx 32rpx 0 0
.list
  padding 0 32rpx
  border-radius 16rpx
  overflow hidden
  .switch
    width 100%
    display flex
    justify-content flex-end
    align-items center
    &-content
      margin-right 16rpx
      display flex
      justify-content center
      align-items center
  .content
    font-size 28rpx
    font-weight bold
    color #000000
    &-item
      margin-top 16rpx
</style>

<script name="json">
module.exports = {
  usingComponents: {
    "custom-container": "@/compontens/base/custom-container?root=common-coms-page",
    "van-icon": "@vant/weapp/icon/index?root=vant-page",
    "van-field": "@vant/weapp/field/index?root=vant-page",
    "van-cell": "@vant/weapp/cell/index?root=vant-page",
    "van-dialog": "@vant/weapp/dialog/index?root=vant-page",
    "van-cell-group": "@vant/weapp/cell-group/index?root=vant-page",
    "popup": "@/subpackages/superstream/compontens/popup/index.mpx?root=superstream",
    "van-collapse": "@vant/weapp/collapse/index",
    "van-collapse-item": "@vant/weapp/collapse-item/index",
    "van-switch": "@vant/weapp/switch/index",
    "mutil-style-text": "@/compontens/base/mutil-style-text.mpx?root=common-coms-page",
    "toast": "@/compontens/base/toast.mpx",
  },
  "componentPlaceholder": {
    "custom-container": "view",
    "mutil-style-text": "view",
    "popup": "view",
    "van-cell": "view",
    "van-cell-group": "view",
    "van-dialog": "view",
    "van-icon": "view",
    "van-field": "view"
  }
}
</script>
