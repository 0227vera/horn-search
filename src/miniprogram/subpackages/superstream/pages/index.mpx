<template>
  <custom-container title="{{title}}">
    <view class="{{roleType === 'partyA' && currentCom === footerList[0].key ? 'component-container' : ''}}">
      <component
        is="{{currentCom}}"
        categoryList="{{categoryList}}"
        categoryTypeId="{{categoryTypeId}}"
        bind:release-jump-done="releaseJumpDone"
        bind:again-order="againOrder"
      />
    </view>
    <footer wx:if="{{shoeFooterList}}" list="{{footerList}}" initActive="{{currentCom}}" bind:tab-change="tabChange" />
  </custom-container>
  <back-home />
</template>

<script>
// node: 超级流转组件，最核心的功能和流转流程
import mpx, { createPage } from '@mpxjs/core'
import config, { categoryMap } from '@/constant/release.js'
const store = getApp().globalStore
const workerTitleMap = {
}
createPage({
  onShareAppMessage() {
    getApp().onShareAppMessage()
  },
  data: {
    currentCom: '',
    roleType: '',
    categoryTypeId: ''
  },
  async onLoad(params) {
    /**
     * type: 区分是boss还是worker
     * key: 确定使用哪个组件展示
     * id: 确定分类
     */
    const { type, key, id } = params
    // 当前的分类id，用于获取分类，常用配置等
    this.categoryTypeId = categoryMap[id]
    // 当前的身份，展示不同的组件，主要是甲乙两方
    this.roleType = type
    // 当前的组件，用于甲方的切换
    this.currentCom = key
    this.setState({
      fromOrigin: this.fromOrigin
    })
  },
  onShow() {
    if (Object.keys(this.cacheForm).length) {
      this.currentCom = this.footerList[0].key
    }
  },
  computed: {
    ...store.mapState(['showBottomNav', 'cacheForm']),
    categoryConfig() {
      return config[this.categoryTypeId] || {}
    },
    categoryList() {
      return this.categoryConfig.category
    },
    fromOrigin() {
      return this.categoryConfig.fromOrigin
    },
    partyA() {
      return this.categoryConfig.partyA
    },
    partyB() {
      return this.categoryConfig.partyB
    },
    shoeFooterList() {
      return this.roleType === 'partyA' && this.showBottomNav
    },
    footerList() {
      return [{
        name: '发单',
        title: this.partyA?.title?.[0],
        icon: 'upgrade',
        key: this.fromOrigin
      }, {
        name: '订单列表',
        title: this.partyA?.title?.[1],
        icon: 'comment',
        key: 'order'
      }]
    },
    title() {
      if (this.roleType === 'partyB') return this.partyB.title
      return this.footerList.find(item => item.key === this.currentCom)?.title || ''
    }
  },
  methods: {
    ...store.mapMutations(['setState']),
    tabChange(e) {
      this.currentCom = e.detail.key
    },
    releaseJumpDone(e) {
      mpx.navigateTo({
        url: `/order-detail/pages/detail-to-boss?isBack=true&id=${e.detail}&fromOrigin=${this.fromOrigin}`
      })
    },
    againOrder(e) {
      this.setState({
        cacheForm: e.detail
      })
      this.currentCom = this.footerList[0].key
    }
  }
})
</script>

<style lang="stylus" scoped>
.component-container
  box-sizing border-box
  width 100%
  height 100%
  overflow hidden
  padding-bottom 150rpx
</style>
<script type="application/json">
  {
    "usingComponents": {
      "custom-container": "@/compontens/base/custom-container",
      "back-home": "@/compontens/base/back-home.mpx",
      "footer": "@/compontens/base/footer.mpx",
      "order": "@/subpackages/superstream/compontens/order",
      "bossWorker":"@/subpackages/superstream/compontens/release/boss-worker",
      "factoryCooper":"@/subpackages/superstream/compontens/release/factory-cooper",
      "partyB": "@/subpackages/superstream/compontens/order/partyB.mpx"
    },
    "disableScroll": true
  }
</script>
