<template>
  <van-popup
    show="{{ show }}"
    round
    position="bottom"
    bind:close="close"
    root-portal
    z-index="{{100}}"
    bind:enter="enter"
  >
    <!-- 时间选择 -->
    <van-datetime-picker
      wx:if="{{type === 'time'}}"
      type="{{timeType}}"
      title="{{title || '选择截止时间'}}"
      value="{{ currentDate }}"
      min-date="{{ minDate }}"
      bind:input="onTimeInput"
      bind:confirm="onTimeConfirm"
      bind:cancel="close"
      filter="{{ filter }}"
      formatter="{{formatter}}"
    />
    <!-- 位置选择 -->
    <block wx:elif="{{type === 'address'}}">
      <van-nav-bar
        left-text="取消"
        right-text="确定"
        title="请选择地址"
        bind:click-left="close"
        bind:click-right="onAddressClickRight"
        safe-area-inset-top="{{false}}"
      />
      <address-list showBottomBtn="{{false}}" inset="{{false}}" showBottomDivder bind:choose-item="addressChange" />
    </block>
    <!-- 分类选择 -->
    <block wx:elif="{{type === 'category'}}">
      <van-nav-bar
        left-text="取消"
        right-text="确定"
        title="请选择分类"
        bind:click-left="close"
        bind:click-right="onCategoryClickRight"
        safe-area-inset-top="{{false}}"
      />
      <van-tree-select
        main-item-class="left-item"
        content-item-class="right-item"
        size="large"
        height="75vh"
        items="{{ categoryList }}"
        main-active-index="{{ mainActiveIndex }}"
        main-active-class="left-select"
        content-active-class="right-select"
        active-id="{{ activeId }}"
        bind:click-nav="onClickNav"
        bind:click-item="onClickItem"
      />
    </block>
    <!-- 单选列表 -->
    <block wx:elif="{{showRadio}}">
      <van-nav-bar
        left-text="取消"
        right-text="确定"
        title="{{title}}"
        bind:click-left="close"
        bind:click-right="onRadioSure"
        safe-area-inset-top="{{false}}"
      />
      <van-radio-group value="{{ radio }}" bind:change="onRadioChange">
        <van-cell-group>
          <van-cell size="large" wx:for="{{radioList}}" wx:key="value" title="{{item.name}}" clickable data-name="{{item.value}}" bind:click="onItemClick">
            <van-radio slot="right-icon" name="{{item.value}}" />
          </van-cell>
        </van-cell-group>
      </van-radio-group>
    </block>
    <!-- 多选列表 -->
    <block wx:elif="{{showCheckBox}}">
      <van-nav-bar
        left-text="取消"
        right-text="确定"
        title="{{title}}"
        bind:click-left="close"
        bind:click-right="onCheckBoxSure"
        safe-area-inset-top="{{false}}"
      />
      <view style="max-height: 75vh; overflow-x: hidden;">
        <van-checkbox-group value="{{ checkbox }}" bind:change="onCheckboxChange">
          <van-cell-group>
            <van-cell
              size="large"
              wx:for="{{ checkBoxList }}"
              wx:key="index"
              title="{{ item.name }}"
              value-class="value-class"
              clickable
              data-index="{{ index }}"
              bind:click="toggle"
            >
              <van-checkbox
                catch:tap="noop"
                shape="square"
                class="checkboxes-{{ index }}"
                name="{{ item.value }}"
              />
            </van-cell>
          </van-cell-group>
        </van-checkbox-group>
      </view>
    </block>
  </van-popup>
</template>

<script>
import { createComponent } from '@mpxjs/core'
import store from '@/store'
import dayjs from 'dayjs'

createComponent({
  options: {
    styleIsolation: 'shared'
  },
  properties: {
    show: {
      type: Boolean,
      value: false
    },
    type: {
      type: String,
      value: ''
    },
    categoryList: {
      type: Array,
      value: []
    },
    title: {
      type: String,
      value: ''
    },
    radioList: {
      type: Array,
      value: []
    },
    checkBoxList: {
      type: Array,
      value: []
    },
    needShowRadio: {
      type: Boolean,
      value: false
    },
    needShowCheckbox: {
      type: Boolean,
      value: false
    },
    initRadio: {
      type: String,
      value: ''
    },
    initCheckbox: {
      type: Array,
      value: ''
    },
    timeType: {
      type: String,
      value: 'datetime'
    },
    initTime: {
      type: String,
      value: ''
    }
  },
  watch: {
    initRadio: {
      handler(val) {
        this.radio = val
      },
      immediate: true
    },
    initCheckbox: {
      handler(val) {
        this.checkbox = val
      },
      immediate: true
    },
    initTime: {
      handler(val) {
        this.currentDate = val
      },
      immediate: true
    }
  },
  data: {
    // node: 分类相关
    mainActiveIndex: 0,
    activeId: '',
    activeCategory: {},
    // note: 地址相关
    address: {},
    // note: 时间相关
    minDate: Date.now(),
    currentDate: '',
    formatter(type, value) {
      const types = {
        year: '年',
        month: '月',
        day: '日',
        hour: '时',
        minute: '分'
      }
      return `${value}${types[type] || ''}`
    },
    filter(type, options) {
      if (type === 'minute') {
        return options.filter((option) => option % 15 === 0)
      }

      return options
    },
    // 单选
    radio: '',
    checkbox: []
  },
  computed: {
    showRadio() {
      const radioShowList = ['cooperType', 'orderType', 'factoryScale', 'tailingsCategory']
      return radioShowList.includes(this.type) || this.needShowRadio
    },
    showCheckBox() {
      const checkboxShowList = ['fabricProp', 'productType']
      return checkboxShowList.includes(this.type) || this.needShowCheckbox
    }
  },
  methods: {
    ...store.mapMutations(['setState']),
    close() {
      this.triggerEvent('close')
      this.setState({
        showBottomNav: true
      })
    },
    enter() {
      this.setState({
        showBottomNav: false
      })
    },
    confirm(data) {
      this.setState({
        showBottomNav: true
      })
      this.triggerEvent('confirm', {
        type: this.type,
        data
      })
    },
    // note: 时间
    onTimeInput(e) {
      this.currentDate = e.detail
    },
    onTimeConfirm() {
      this.confirm({ time: this.currentDate })
    },
    // node: 位置
    addressChange(e) {
      const { detail } = e || {}
      this.address = detail
    },
    onAddressClickRight() {
      this.confirm({
        poi: this.address.address,
        tel: this.address.phone
      })
    },
    // note: 分类
    onClickNav({ detail = {} }) {
      this.mainActiveIndex = detail.index
    },
    onClickItem({ detail = {} }) {
      const activeId = this.activeId === detail.id ? null : detail.id
      this.activeId = activeId
      this.activeCategory = detail
    },
    onCategoryClickRight() {
      const obj = JSON.parse(JSON.stringify(this.activeCategory))
      this.confirm(obj)
    },
    // note: 单选
    onRadioChange(e) {
      this.radio = e.detail
    },
    onItemClick(e) {
      this.radio = e.currentTarget.dataset.name
    },
    onRadioSure() {
      const obj = this.radioList.find(item => item.value === this.radio)
      if (obj) {
        this.confirm(obj)
      } else {
        this.close()
      }
    },
    // note: 多选
    onCheckboxChange(e) {
      this.checkbox = e.detail
    },
    toggle(event) {
      const { index } = event.currentTarget.dataset
      const checkbox = this.selectComponent(`.checkboxes-${index}`)
      checkbox.toggle()
    },
    noop() {},
    onCheckBoxSure() {
      const obj = {
        value: this.checkbox,
        selectedList: this.checkBoxList.filter(item => this.checkbox.includes(item.value))
      }
      this.confirm(obj)
    }
  }
})

</script>
<style>
.van-nav-bar__text{
  font-size: 32rpx;
  font-weight: bold;
}
.left-item{
  font-size: 32rpx;
}
.right-item{
  font-size: 32rpx;
}
.value-class {
  flex: none !important;
}
.left-select{
  color: #1989fa !important;
  border-color: #1989fa !important;
}
.right-select{
  color: #1989fa !important;
}
</style>
<script type="application/json">
  {
    "usingComponents": {
      "van-popup": "@vant/weapp/popup/index",
      "address-list": "@/compontens/common/address-list",
      "van-datetime-picker": "@vant/weapp/datetime-picker/index",
      "van-nav-bar": "@vant/weapp/nav-bar/index",
      "van-tree-select": "@vant/weapp/tree-select/index",
      "van-cell": "@vant/weapp/cell/index",
      "van-cell-group": "@vant/weapp/cell-group/index",
      "van-radio": "@vant/weapp/radio/index",
      "van-radio-group": "@vant/weapp/radio-group/index",
      "van-checkbox": "@vant/weapp/checkbox/index",
      "van-checkbox-group": "@vant/weapp/checkbox-group/index"
    }
  }
</script>
