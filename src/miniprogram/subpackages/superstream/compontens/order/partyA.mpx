<template>
<skeleton wx:if="{{loading}}" />
<card
  wx:elif="{{list.length}}"
  fromOrigin="{{fromOrigin}}"
  role="boss"
  list="{{list}}"
  buttons="{{buttons}}"
  moreLoad="{{moreLoad}}"
  bind:footer-btn="footerBtn"
  bind:more-load="loadmore"
>
</card>
<view wx:else class="status">
  <van-empty />
  <view class="text">{{emptyText}}</view>
</view>
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import { updateRelease } from '@/api'
import Dialog from '@vant/weapp/dialog/dialog'
import store from '@/store'
createComponent({
  properties: {
    list: {
      type: Array,
      value: []
    },
    status: {
      type: String,
      value: ''
    },
    loading: {
      type: Boolean,
      value: true
    },
    moreLoad: {
      type: Object,
      value: {}
    },
    emptyText: {
      type: String,
      value: '暂无数据'
    }
  },
  computed: {
    ...store.mapState(['fromOrigin', 'openid']),
    buttons() {
      return [{
        text: '关单',
        icon: 'passed',
        id: 'close',
        hide: this.status === '4'
      }, {
        text: '再来一单',
        icon: 'revoke',
        id: 'again'
      }, {
        text: '看详情',
        type: 'primary',
        icon: 'eye-o',
        id: 'gotoDetail'
      }]
    }
  },
  methods: {
    async footerBtn(e) {
      const { item, buttonInfo } = e.detail
      switch (buttonInfo.id) {
        case 'close':
          if (item.OPENID !== this.openid) {
            mpx.showToast({
              icon: 'none',
              title: '您不是发单人，不可关单'
            })
            return
          }
          Dialog.confirm({
            title: '提示',
            message: `是否确定关闭此订单？`
          }).then(async () => {
            mpx.showLoading({
              title: '关单中……'
            })
            await updateRelease({
              _id: item._id,
              status: '4'
            })
            mpx.showToast({
              icon: 'success',
              title: '关单成功'
            })
            this.triggerEvent('close-order', item)
          })

          break
        case 'again':
          this.triggerEvent('again-order', item)
          break
        case 'gotoDetail':
          this.gotoDetail(item)
          break
      }
    },
    gotoDetail(item) {
      mpx.navigateTo({
        url: `/order-detail/pages/detail-to-boss?isBack=true&id=${item._id}&fromOrigin=${this.fromOrigin}`
      })
    },
    loadmore() {
      this.triggerEvent('more-load')
    }
  }
})
</script>

<style lang="stylus" scoped>
.status
  width 100%
  height 60vh
  display flex
  justify-content center
  align-items center
  flex-direction column
  .text
    font-size 28rpx
    color #000000
    font-weight bold
</style>

<script type="application/json">
  {
    "usingComponents": {
      "card": "@/subpackages/superstream/compontens/card/index.mpx",
      "skeleton": "@/subpackages/superstream/compontens/card/skeleton.mpx"
    },
    "componentPlaceholder": {
    }
  }
</script>
