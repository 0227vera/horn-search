<template>
<view wx:if="{{loading}}" class="status">
  <van-loading type="spinner" color="#1989fa" vertical>加载中...</van-loading>
</view>
<card
  wx:elif="{{renderList.length}}"
  fromOrigin="{{fromOrigin}}"
  role="boss"
  list="{{renderList}}"
  buttons="{{buttons}}"
  bind:footer-btn="footerBtn"
/>
<view wx:else class="status">
  <van-empty description="{{emptyText}}" />
</view>
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import store from '@/store'
createComponent({
  properties: {
    list: {
      type: Array,
      value: []
    },
    status: {
      type: String,
      value: ''
    },
    loading: {
      type: Boolean,
      value: true
    },
    emptyText: {
      type: String,
      value: '暂无数据'
    }
  },
  data: {
    buttons: [{
      text: '关单',
      icon: 'passed',
      id: 'close'
    }, {
      text: '看详情',
      type: 'primary',
      icon: 'eye-o',
      id: 'gotoDetail'
    }]
  },
  computed: {
    ...store.mapState(['fromOrigin', 'openid']),
    renderList() {
      return this.list.filter(item => item.status === this.status)
    }
  },
  methods: {
    async footerBtn(e) {
      const { item, buttonInfo } = e.detail
      switch (buttonInfo.id) {
        case 'close':
          if (item.OPENID !== this.openid) {
            mpx.showToast({
              icon: 'none',
              title: '您不是发单人，不可关单'
            })
            return
          }
          await updateRelease({
            _id: item._id,
            status: '4'
          })
          mpx.showToast({
            icon: 'success',
            title: '关单成功'
          })
          this.triggerEvent('close-order')
          break
        case 'gotoDetail':
          this.gotoDetail(item)
          break
      }
    },
    gotoDetail(item) {
      mpx.navigateTo({
        url: `/order-detail/pages/detail-to-boss?isBack=true&id=${item._id}&fromOrigin=${this.fromOrigin}`
      })
    }
  }
})
</script>

<style lang="stylus" scoped>
.status
  width 100%
  height 350rpx
  display flex
  justify-content center
  align-items center
</style>

<script type="application/json">
  {
    "usingComponents": {
      "card": "@/compontens/common/card/index.mpx",
      "van-loading": "@vant/weapp/loading/index",
      "van-empty": "@vant/weapp/empty/index"
    }
  }
</script>
