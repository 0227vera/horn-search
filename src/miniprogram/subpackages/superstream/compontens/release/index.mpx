<template>
  <van-cell-group class="form" custom-class="home-cell-group-container" style="background:#fff">
    <view class="category-container">
      <van-field
        class="category-content"
        label="岗位"
        title-width="80rpx"
        required
        is-link
        readonly
        value="{{updateObj.categoryName}}"
        input-align="right"
        placeholder="请点击选择需要招的岗位"
        bind:tap="showPopupContainer('category')"
      />
      <van-dropdown-menu wx:if="{{showCategoryType}}" title-class="dropdown">
        <van-dropdown-item bind:change="changeCategoryType" value="{{ updateObj.categoryType }}" options="{{ categoryTypeList }}" />
      </van-dropdown-menu>
    </view>
    </van-field>
    <van-field
      label="{{subCategoryInfo.label}}"
      wx:if="{{subCategoryInfo.show}}"
      title-width="240rpx"
      required
      value="{{ updateObj.categorySub }}"
      placeholder="{{subCategoryInfo.placeholder}}"
      input-align="right"
      bind:change="onFieldChange"
      id="categorySub"
    />
    <van-field
      label="单价"
      title-width="80rpx"
      required
      value="{{ updateObj.price }}"
      placeholder="请输入计时或者计件的单价"
      type="digit"
      input-align="right"
      bind:change="onFieldChange"
      id="price"
      center
    >
      <view slot="input" class="area-container" wx:if="{{updateObj.priceUnit === '3'}}">
        <input
          type="digit"
          value="{{updateObj.priceMin}}"
          id="priceMin"
          bind:input="onAreaFieldChange"
          placeholder="最低"
        />
        <text class="middle">~</text>
        <input
          type="digit"
          value="{{updateObj.priceMax}}"
          id="priceMax"
          bind:input="onAreaFieldChange"
          placeholder="最高"
        />
      </view>
      <van-dropdown-menu slot="button">
        <van-dropdown-item bind:change="changeUnit" value="{{ updateObj.priceUnit }}" options="{{ unitList }}" />
      </van-dropdown-menu>
    </van-field>
    <van-field
      wx:if="{{updateObj.categoryType !== '2'}}"
      label="数量"
      title-width="80rpx"
      required
      value="{{ updateObj.num }}"
      type="digit"
      placeholder="请输入数量"
      input-align="right"
      bind:change="onFieldChange"
      id="num"
    >
      <view slot="input" class="area-container">
        <input
          type="digit"
          value="{{updateObj.numMin}}"
          id="numMin"
          bind:input="onAreaFieldChange"
          placeholder="最少"
        />
        <text class="middle">~</text>
        <input
          type="digit"
          value="{{updateObj.numMax}}"
          id="numMax"
          bind:input="onAreaFieldChange"
          placeholder="最多"
        />
      </view>
      <view slot="right-icon" style="color: #333; font-weight: bold;">件</view>
    </van-field>
    <van-field
      label="货源(品质层次)"
      title-width="240rpx"
      required="{{false}}"
      value="{{ updateObj.origin }}"
      placeholder="货源(品质层次)"
      input-align="right"
      bind:change="onFieldChange"
      id="origin"
    />
    <van-field
      label="位置"
      title-width="80rpx"
      required
      is-link
      readonly
      value="{{updateObj.poi.name}}"
      input-align="right"
      placeholder="请点击进入输入我的详细地址"
      bind:tap="showPopupContainer('address')"
    />
    <van-field
      label="电话"
      title-width="80rpx"
      required
      value="{{ updateObj.tel }}"
      type="number"
      placeholder="请输入联系方式"
      input-align="right"
      bind:change="onFieldChange"
      id="tel"
    />
    <van-field
      label="截止时间"
      title-width="120rpx"
      is-link
      readonly
      value="{{ timeInfo }}"
      placeholder="点击确定截止时间"
      bind:tap="showPopupContainer('time')"
      input-align="right"
    />
    <van-cell title="图片或者视频展示" value="{{imagesValue}}" border="{{false}}" />
    <view class="image-container">
      <view class="iamge-content">
        <van-uploader
          bind:after-read="afterRead"
          accept="media"
          deletable
          disabled="{{uploaderDisabled}}"
        />
        <view class="imgurl-container" wx:for="{{updateObj.images}}" wx:key="*this">
          <van-image
            bind:click="previewMedia(index)"
            width="80"
            height="80"
            src="{{item}}"
            radius="8"
            fit="cover"
          />
          <van-icon name="clear" bindtap="clearImg(item)" class="image-clear-icon"/>
        </view>
      </view>
    </view>
    <van-field
      label="岗位要求"
      title-width="120rpx"
      value="{{ updateObj.note }}"
      placeholder="请输入您对所招工人的要求或者服装的要求"
      input-align="left"
      type="textarea"
      autosize
      id="note"
      bind:change="onFieldChange"
    />
    <van-field
      label="待遇补充"
      title-width="120rpx"
      value="{{ updateObj.add }}"
      placeholder="请输入您可以额外提供的待遇"
      input-align="left"
      type="textarea"
      autosize
      id="add"
      bind:change="onFieldChange"
    />
    <van-cell>
      <van-button round type="primary" block bind:tap="submitData">发布</van-button>
    </van-cell>
  </van-cell-group>
  <popup
    show="{{showPopup}}"
    type="{{popupType}}"
    categoryList="{{categoryList}}"
    bind:close="closePopupContainer"
    bind:confirm="onConfirmHandle"
  />
  <service-notice wx:ref="serviceNotice" tmplIds="{{tmplIds}}" />
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import { fileUpload, addRelease, updateRelease } from '@/api'
import { ORDER_UPDATE } from '@/setting/noticeInfo.js'
import config from '@/constant/release.js'
const store = getApp().globalStore

const unitList = [
  { text: '元/件', value: '1' },
  { text: '元/小时', value: '2' },
  { text: 'K/月', value: '3' }
]

createComponent({
  data: {
    showPopup: false,
    popupType: '',
    tmplIds: [ORDER_UPDATE],
    uploaderDisabled: false,
    showCategoryType: false,
    categoryTypeList: [
      { text: '临工', value: '1' },
      { text: '长工', value: '2' }
    ],
    unitList,
    subCategoryInfo: {
      show: false,
      label: '',
      placeholder: ''
    },
    updateObj: {
      category: '',
      categoryType: '',
      categoryTypeName: '',
      categoryName: '',
      categorySub: '',
      origin: '',
      numMin: '',
      numMax: '',
      note: '',
      price: '',
      priceMin: '',
      priceMax: '',
      priceUnit: '1',
      priceUnitName: '元/件',
      tel: '',
      ownTime: '',
      ownTimeName: '',
      images: [],
      poi: {}
    }
  },
  computed: {
    ...store.mapState(['adInfo']),
    categoryList() {
      return config.findWorker.category
    },
    imagesValue() {
      if (this.updateObj.images.length) {
        return `已上传${this.updateObj.images.length}张图片`
      }
      return '点击下方可上传图片'
    },
    timeInfo() {
      if (this.updateObj.ownTime) {
        const time = new Date(this.updateObj.ownTime)
        const year = time.getFullYear()
        const month = time.getMonth() + 1
        const day = time.getDate()
        const hour = time.getHours()
        const min = time.getMinutes()
        return `${year}年${month}月${day}日${hour}时${min}分`
      }
      return ''
    }
  },
  async attached() {
    await this.setLocation()
    this.updateObj.poi = {
      ...this.adInfo,
      name: this.adInfo.address
    }
  },
  methods: {
    ...store.mapActions(['setLocation', 'getReleaseList']),
    ...store.mapMutations(['setState']),
    // note: 弹窗处理
    showPopupContainer(type) {
      this.showPopup = true
      this.popupType = type
    },
    closePopupContainer() {
      this.showPopup = false
    },
    onConfirmHandle({ detail = {} } = {}) {
      const { data, type } = detail
      const actions = {
        category: () => {
          this.updateObj.category = data.id
          this.updateObj.categoryName = data.text
          this.showCategoryType = data.showCategoryType
          if (data.showCategoryType) {
            this.updateObj.categoryType = '1'
            this.updateObj.categoryTypeName = '临工'
            this.setUnitList()
          } else {
            this.updateObj.categoryType = ''
            this.updateObj.categoryTypeName = ''
            this.setUnitList()
          }
          if (data.needDetail) {
            this.subCategoryInfo.show = true
            this.subCategoryInfo.label = `${data.text}(分类)`
            this.subCategoryInfo.placeholder = `请输入${data.text}的具体类别`
          } else {
            this.subCategoryInfo.show = false
          }
        },
        time: () => {
          this.updateObj.ownTime = data.ownTime
          this.updateObj.ownTimeName = this.timeInfo
        },
        address: () => {
          this.updateObj.poi = data.poi
          this.updateObj.tel = data.tel
        }
      }
      actions?.[type]?.()
      this.closePopupContainer()
    },
    // note: 修改字段值
    onFieldChange(e) {
      this.updateObj[e.target.id] = e.detail
    },
    onAreaFieldChange(e) {
      console.log(e)
      this.updateObj[e.target.id] = e.detail.value
    },
    changeUnit(e) {
      const name = this.unitList.find(item => item.value === e.detail).name
      this.updateObj.priceUnitName = name
      this.updateObj.priceUnit = e.detail
    },
    changeCategoryType(e) {
      const name = this.categoryTypeList.find(item => item.value === e.detail).name
      this.updateObj.categoryType = e.detail
      this.updateObj.categoryTypeName = name
      this.setUnitList()
    },
    setUnitList() {
      if (this.updateObj.categoryType === '2') {
        this.updateObj.priceUnit = '3'
        this.unitList = unitList.filter(item => item.value === '3')
      } else if (this.updateObj.categoryType === '1') {
        this.updateObj.priceUnit = '1'
        this.unitList = unitList.filter(item => item.value !== '3')
      } else {
        this.unitList = unitList
      }
    },
    // note: 图片相关处理
    async afterRead(e) {
      this.uploaderDisabled = true
      const res = await fileUpload(e.detail.file.url)
      this.updateObj.images.push(res.fileID)
      this.uploaderDisabled = false
    },
    clearImg(item) {
      this.updateObj.images = this.updateObj.images.filter(f => f !== item)
    },
    previewMedia(index) {
      console.log(index, this.updateObj.images)
      wx.previewMedia({
        current: index,
        sources: this.updateObj.images.map(item => ({
          url: item
        }))
      })
    },
    // note: 数据检验
    validate() {
      const result = {
        success: false,
        text: ''
      }
      if (!this.updateObj.category) {
        result.text = '请选择类别'
        return result
      }
      if (this.subCategoryInfo.show && !this.updateObj.categorySub) {
        result.text = this.subCategoryInfo.placeholder
        return result
      }
      if (this.updateObj.priceUnit !== '3' && !this.updateObj.price) {
        result.text = '请输入单价'
        return result
      }
      if (this.updateObj.priceUnit === '3') {
        if (!this.updateObj.priceMin) {
          result.text = '请输入最低单价'
          return result
        }
        if (!this.updateObj.priceMax) {
          result.text = '请输入最高单价'
          return result
        }
        if (+this.updateObj.priceMin > +this.updateObj.priceMax) {
          result.text = '最高单价不得小于最低单价'
          return result
        }
      }
      if (this.updateObj.categoryType === '1') {
        if (!this.updateObj.numMin) {
          result.text = '请输入最少的数量'
          return result
        }
        if (!this.updateObj.numMax) {
          result.text = '请输入最多的数量'
          return result
        }
        if (+this.updateObj.numMin > +this.updateObj.numMax) {
          result.text = '最多数量不得小于最少数量'
          return result
        }
      }
      // if (!this.updateObj.origin) {
      //   result.text = '请输入货源'
      //   return result
      // }
      if (!this.updateObj.tel) {
        result.text = '请输入手机号'
        return result
      }
      if (!/^(?:(?:\+|00)86)?1[3-9]\d{9}$/.test(this.updateObj.tel)) {
        result.text = '请输入正确的手机号'
        return result
      }
      result.success = true
      return result
    },
    // note: 提交操作
    async submitData() {
      console.log(this.updateObj)
      const vali = this.validate()
      if (!vali.success) {
        mpx.showToast({
          title: vali.text,
          icon: 'none'
        })
        return
      }
      mpx.showLoading({
        title: '提交中...',
        mask: true
      });
      const subscribe = await this.$refs.serviceNotice?.showServiceNotice?.()
      this.updateObj.num = +this.updateObj.num
      const res = await addRelease({ ...this.updateObj, status: 1, subscribeInfo: subscribe })
      mpx.hideLoading()
      if (res.code === 200) {
        const self = this
        mpx.showToast({
          icon: 'success',
          title: '您已发布成功!',
          duration: 1000,
          complete: async () => {
            mpx.showLoading({
              title: '正在为您推送……',
              mask: true
            })
            await updateRelease({
              _id: res.data,
              status: '2'
            })
            mpx.hideLoading()
            self.getReleaseList()
            mpx.navigateTo({
              url: `/order-detail/pages/detail-to-boss?isBack=true&id=${res.data}`,
              success() {
                self.triggerEvent('release-jump-done')
              }
            })
          }
        })
      } else {
        mpx.showToast({
          title: res.msg,
          icon: 'none'
        })
      }
    }
  }
})
</script>
<style lang="stylus">
.dropdown
  color #000
  font-size 34rpx
  font-weight bold
.submit
  margin-top 32rpx
  margin-bottom 20rpx
.area-container
  display flex
  .middle
    padding 0 16rpx
    font-size 36rpx
    color #333
    font-weight bold
  input
    text-align center
    font-size 32rpx
    background-color #f9f9f9
    border-radius 6rpx
    font-weight bold
    height 36rpx
    lint-height 36rpx
.image-container
  background #ffffff
  padding 20rpx 32rpx
  box-sizing border-box
  .iamge-content
    border-bottom 1px solid #ebedf0
    display flex
    flex-wrap wrap
.imgurl-container
  position relative
  margin 0 8px 8px 0
  .image-clear-icon
    position absolute
    top 0
    right 0
    color #fff
    font-size 40rpx
.category-container
  background #fff
  width 100%
  display flex
  align-items center
  .category-content
    flex 1
    height 100%
  &-item
    display flex
    padding 32rpx 0
    box-sizing border-box
    border-top 2rpx solid #eee
    .text
      flex 1
      color #333333
      font-size 28rpx
</style>

<script type="application/json">
  {
    "usingComponents": {
      "service-notice": "@/compontens/common/service-notice",
      "custom-container": "@/compontens/base/custom-container",
      "popup": "@/subpackages/superstream/compontens/popup/index.mpx",
      "van-cell": "@vant/weapp/cell/index",
      "van-cell-group": "@vant/weapp/cell-group/index",
      "van-uploader": "@vant/weapp/uploader/index",
      "van-field": "@vant/weapp/field/index",
      "van-image": "@vant/weapp/image/index",
      "van-icon": "@vant/weapp/icon/index",
      "van-button": "@vant/weapp/button/index",
      "van-dropdown-menu": "@vant/weapp/dropdown-menu/index",
      "van-dropdown-item": "@vant/weapp/dropdown-item/index"
    }
  }
</script>
