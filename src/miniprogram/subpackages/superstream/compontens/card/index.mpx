
<template>
  <view class="container">
    <van-swipe-cell custom-class="{{index % 2 === 1 ? 'jishu' : 'oushu'}}" wx:for="{{renderList}}" wx:key="_id" right-width="{{ canDelete ? 65 : 0 }}">
      <view wx:if="{{canDelete}}" slot="right" class="van-swipe-cell__right" bind:tap="delete(item)">删除</view>
      <view class="list-item" bind:tap="gotoDetail(item)">
        <view wx:if="{{item.tag}}" class="tag">{{item.tag}}</view>
        <view class="list-item_info">
          <image class="list-item_info-img" catchtap="priview(item)" src="{{item.thumb}}"></image>
          <view class="list-item_info-content">
            <view wx:for="{{item.contentList}}" wx:key="*this" wx:for-item="content" class="list-item_info-content-item">
              <block wx:if="{{content.type === 'map'}}">
                <text class="list-item_info-content-item_text">{{content.text}}</text>
                <view class="list-item_info-content-item_value">
                  <mutil-style-text class="text" rules="{{content.rules || textRules}}" text="{{content.value}}" />
                </view>
              </block>
              <block wx:elif="{{content.type === 'tag'}}">
                <view class="list-item_info-content-item_tags">
                  <view class="list-item_info-content-item_tags-item" wx:for="{{content.tags}}" wx:key="*this" wx:for-item="tag">
                    <mutil-style-text text="{{tag.text}}" rules="{{tag.rules || textRules}}" />
                  </view>
                  <view class="timeText">
                    <mutil-style-text text="{{content.timeText}}" rules="{{textRules}}" />
                  </view>
                </view>
              </block>
            </view>
          </view>
        </view>
        <view class="list-item_ope" wx:if="{{buttons.length}}">
          <view class="distance">
            <mutil-style-text text="{{item.distanceText}}" rules="{{textRules}}" />
          </view>
          <van-button
            wx:for="{{buttons}}"
            wx:if="{{!b.hide && !(b.isExtraCondition && item.cooperType !== 'a3')}}"
            size="small"
            style="margin-left: 8rpx"
            wx:for-item="b"
            round
            wx:key="id"
            type="{{b.type || 'default'}}"
            catchtap="clickBtn(item, b)"
            icon="{{b.icon || ''}}"
            custom-class="btn-custom"
          >
            {{b.text}}
          </van-button>
        </view>
      </view>
    </van-swipe-cell>
    <view class="moreload">
      <van-loading wx:if="{{moreLoad.loading}}" type="spinner" size="14px" color="#1989fa">
        <text style="color: #000000;font-weight: bold;">加载中...</text>
      </van-loading>
      <view wx:else bind:tap="loadmore">{{moreLoad.text}}</view>
    </view>
  </view>
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import store from '@/store'
import dayjs from 'dayjs'
import makePhoneToBoss from '@/utils/makePhoneToBoss'
import unreadFun from '@/utils/unread'
import actions from './utils'

createComponent({
  properties: {
    list: {
      type: Array,
      value: []
    },
    filterKeys: {
      type: Array,
      value: []
    },
    buttons: {
      type: Array,
      value: []
    },
    canDelete: {
      type: Boolean,
      value: false
    },
    role: {
      type: String,
      value: 'boss'
    },
    moreLoad: {
      type: Object,
      value: {}
    }
  },
  data: {
    textRules: {
      '{x}': {
        style: 'color: #ff525d; font-weight: bold;'
      }
    }
  },
  computed: {
    ...store.mapState(['openid', 'fromOrigin', 'adInfo']),
    isWorker() {
      return this.role === 'worker'
    },
    isBoss() {
      return this.role === 'boss'
    },
    renderList() {
      const items = this.list.map(item => {
        if (this.isWorker) {
          item.tag = item.calllist?.length ? `已有${item.calllist.length}人呼叫` : '暂无人呼叫'
        }
        item.thumb = item.images[0] || 'cloud://cloud1-0gfibr1283141-0b78337d158.636c-cloud1-0gfibr1283141-0b78337d158-1307055684/image-cdn/none.png'
        const distance = item.distance
        let distanceText = ''
        if (distance) {
          if (distance < 0.1) {
            distanceText = '距您{100米内}'
          } else {
            distanceText = `距您{${distance}km}`
          }
        }
        item.distanceText = distanceText
        const content = actions?.[this.fromOrigin]?.(item, this.filterKeys) ?? []
        const disTime = Date.now() - item.RELEASE_ADD_TIME
        const oneMin = 60 * 1000
        const oneHour = 60 * oneMin
        const oneDay = 24 * oneHour
        let timeText = ''
        if (disTime >= oneDay) {
          timeText = `{${Math.floor(disTime / oneDay)}天}前发布`
        } else if (disTime >= oneHour) {
          timeText = `{${Math.floor(disTime / oneHour)}小时}前发布`
        } else if (disTime >= oneMin) {
          timeText = `{${Math.floor(disTime / oneMin)}分钟}前发布`
        } else {
          timeText = '刚刚发布'
        }
        const tags = []
        if (this.isBoss) {
          if (item.calllist?.length) {
            tags.push({
              text: `已被{${item.calllist.length}人呼叫过}`
            })
          }
          if (item.readlist?.length) {
            tags.push({
              text: `已有{${item.readlist.length}人阅读}`
            })
          }
        } else if (this.isWorker) {
          const isCall = item.calllist.find(f => f.openid === this.openid)
          const isRead = item.readlist.find(f => f.openid === this.openid)
          if (isCall) {
            tags.push({
              text: `呼叫{${isCall.times}次}`
            })
          }
          if (isRead) {
            tags.push({
              text: `阅读{${isRead.times}次}`
            })
          }
        }
        tags.forEach(tag => {
          tag.rules = {
            '{x}': {
              style: 'color: #ee0a24; font-weight: bold; margin-left: 4rpx;'
            }
          }
        })
        content.push({ type: 'tag', tags, timeText })
        item.contentList = content
        return item
      })
      return items
    }
  },
  methods: {
    clickBtn(item, b) {
      this.triggerEvent('footer-btn', { item, buttonInfo: b })
    },
    gotoDetail(item) {
      this.triggerEvent('footer-btn', {
        item,
        buttonInfo: {
          id: 'gotoDetail'
        }
      })
    },
    priview(item) {
      if (!item.images.length) {
        return
      }
      wx.previewMedia({
        current: 0,
        sources: item.images.map(i => ({
          url: i,
          type: 'image'
        }))
      })
    },
    delete(item) {
      this.triggerEvent('delete', item)
    },
    loadmore() {
      this.triggerEvent('more-load')
    }
  }
})
</script>

<style lang="stylus">
.btn-custom{
  font-weight: bolder;
}
</style>
<style lang="stylus" scoped>
@import "@/assets/base.styl"
.van-swipe-cell__right
  width 65px
  height 100%
  background-color #ee0a24
  color #ffffff
  display flex
  align-items center
  justify-content center
  border-radius 16rpx
.list-item
  background #ffffff
  padding 16rpx
  border-radius 16rpx
  position relative
  margin-bottom 16rpx
  .tag
    position absolute
    top 16rpx
    left 16rpx
    background #ee0a24
    color #ffffff
    font-size 24rpx
    font-weight bold
    padding 2rpx 8rpx
    border-radius 0 28rpx 28rpx 0
    opacity 0.7
  &_info
    display flex
    align-items center
    &-img
      width 160rpx
      height 160rpx
    &-content
      flex 1
      height 160rpx
      overflow hidden
      margin-left 16rpx
      font-size 28rpx
      display flex
      flex-direction column
      justify-content space-between
      &-item
        display flex
        align-items center
        &_text
          width 120rpx
          text-align right
          padding-right 16rpx
        &_value
          flex 1
          overflow hidden
          display flex
          align-items center
          .text
            flex 1
            text-overflow ellipsis
            overflow hidden
            white-space nowrap
        &_tags
          display flex
          justify-content flex-end
          align-items center
          width 100%
          &-item
            padding 0 8rpx
            background #ffffff
            border-radius 8rpx
            box-shadow 0px 4px 20px 0px rgba(0,0,0,0.1)
            margin-right 16rpx
            font-size 24rpx
            color #1989fa
            border 2rpx solid #1989fa
          .timeText
            font-size 24rpx
  &_ope
    display flex
    justify-content flex-end
    align-items center
    margin-top 18rpx
    .distance
      font-size 28rpx
      font-weight bold
      margin-right auto
.moreload
  color #000000
  font-size 28rpx
  font-weight bold
  width 100%
  display flex
  align-items center
  justify-content center
  padding 50rpx 0
</style>

<script type="application/json">
  {
    "usingComponents": {
      "mutil-style-text": "@/compontens/base/mutil-style-text.mpx?root=common-coms-page"
    },
    "componentPlaceholder": {
      "mutil-style-text": "view"
    },
    "disableScroll": true
  }
</script>
