<template>
  <custom-container
    title="发布历史"
  >
    <view wx:if="{{loading}}" class="loading">
      <van-loading type="spinner" color="#1989fa" vertical>加载中...</van-loading>
    </view>
    <view wx:elif="{{list.length}}" class="list-container">
      <view wx:for="{{list}}" wx:key="_id" style="margin-top: 16rpx" >
        <van-cell-group inset>
          <van-swipe-cell right-width="{{ 65 }}">
            <view bind:tap="gotoDetail(item)">
              <van-cell title="类别" value="{{item.categoryName}}" />
              <van-cell title="截止时间" value="{{item.ownTimeName}}" />
              <van-cell wx:if="{{item.images.length}}" title="图片" value="点击查看图片" clickable catchtap="priviewImg(item)" />
            </view>
            <view slot="right" class="van-swipe-cell__right" bind:tap="delete(item)">删除</view>
          </van-swipe-cell>
        </van-cell-group>
      </view>
    </view>
    <view wx:else class="loading empty">
      <van-empty description="暂无数据，点击我去发布一个吧" bind:tap="gotoRelease" />
    </view>
  </custom-container>
  <van-dialog id="van-dialog" />
</template>

<script>
import mpx, { createPage, onLoad } from '@mpxjs/core'
import { getWorkerReleaseList, deleteWorkerRelease } from '@/api'
import store from '@/store'
import Dialog from '@vant/weapp/dialog/dialog'

createPage({
  data: {
    loading: true,
    list: []
  },
  async onLoad() {
    this.loading = true
    const res = await getWorkerReleaseList({
      needOpenid: true
    })
    this.list = res?.data?.list || []
    this.loading = false
  },
  methods: {
    gotoRelease() {
      mpx.redirectTo({
        url: '/release/pages/worker'
      })
    },
    gotoDetail(item) {
      mpx.redirectTo({
        url: `/order-detail/pages/worker-detail?id=${item._id}`
      })
    },
    priviewImg(item) {
      wx.previewMedia({
        current: 0,
        sources: item.images.map(item => ({
          url: item,
          type: 'image'
        }))
      })
    },
    delete(item) {
      Dialog.confirm({
        title: '提示',
        message: `确认删除类别为：${item.categoryName}的数据吗？`
      }).then(() => {
        deleteWorkerRelease({ _id: item._id }).then(res => {
          if (res.code === 200) {
            this.list = this.list.filter(f => f._id !== item._id)
          }
        })
      })
    }
  }
})

</script>

<style lang="stylus" scoped>
.list-container
  padding-bottom 50rpx
.loading
  width 100%
  height 70vh
  display flex
  align-items center
  justify-content center
.van-swipe-cell__right
  width 65px
  height 100%
  background-color #ee0a24
  color #ffffff
  display flex
  align-items center
  justify-content center
</style>

<script type="application/json">
  {
    "usingComponents": {
      "van-cell": "@vant/weapp/cell/index",
      "van-cell-group": "@vant/weapp/cell-group/index",
      "van-empty": "@vant/weapp/empty/index",
      "van-loading": "@vant/weapp/loading/index",
      "custom-container": "@/compontens/base/custom-container",
      "van-card": "@vant/weapp/card/index",
      "van-button": "@vant/weapp/button/index",
      "van-swipe-cell": "@vant/weapp/swipe-cell/index",
      "van-dialog": "@vant/weapp/dialog/index"
    },
    "navigationStyle": "custom"
  }
</script>
