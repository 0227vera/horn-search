<template>
  <custom-container
    title="发布历史"
  >
    <van-tabs active="{{ active }}" bind:change="onTypeChange" ellipsis="{{false}}" animated sticky color="#1989fa">
      <van-tab wx:for="{{steps}}" wx:key="desc" title="{{item.desc}}" name="{{item.status}}"></van-tab>
    </van-tabs>
    <view wx:if="{{loading}}" class="loading">
      <van-loading type="spinner" color="#1989fa" vertical>加载中...</van-loading>
    </view>
    <view class="list-container" wx:elif="{{list.length}}">
      <card
        list="{{list}}"
        buttons="{{buttons}}"
        canDelete
        bind:footer-btn="footerBtn"
        bind:delete="delete"
      />
    </view>
    <view wx:else class="loading empty">
      <van-empty description="暂无数据，点击我去发布一个吧" bind:tap="gotoRelease" />
    </view>
  </custom-container>
  <van-dialog id="van-dialog" />
</template>

<script>
import mpx, { createPage, onLoad } from '@mpxjs/core'
import { fileUpload, getReleaseList, deleteRelease } from '@/api'
import store from '@/store'
import Dialog from '@vant/weapp/dialog/dialog'

createPage({
  data: {
    loading: true,
    list: [],
    active: '2',
    buttons: [{
      text: '查看详情',
      type: 'primary',
      icon: 'eye-o',
      id: 'gotoDetail'
    }]
  },
  computed: {
    ...store.mapState(['steps'])
  },
  async onLoad() {
    this.getList()
  },
  methods: {
    async getList() {
      this.loading = true
      const res = await getReleaseList({
        needOpenid: true,
        status: this.active
      })
      this.list = res?.data?.list || []
      this.loading = false
    },
    onTypeChange(e) {
      this.active = e.detail.name
      this.getList()
    },
    gotoRelease() {
      mpx.redirectTo({
        url: '/homepage/pages/index?currentKey=home'
      })
    },
    priviewImg(item) {
      wx.previewMedia({
        current: 0,
        sources: item.images.map(item => ({
          url: item,
          type: 'image'
        }))
      })
    },
    delete(e) {
      const item = e.detail
      Dialog.confirm({
        title: '提示',
        message: `确认删除类别为：${item.categoryName}的数据吗？`
      }).then(() => {
        deleteRelease({ _id: item._id }).then(res => {
          if (res.code === 200) {
            this.list = this.list.filter(f => f._id !== item._id)
          }
        })
      })
    },
    footerBtn(e) {
      const info = e.detail
      this.gotoDetail(info.item)
    },
    gotoDetail(item) {
      mpx.navigateTo({
        url: `/order-detail/pages/index?id=${item._id}`
      })
    }
  }
})

</script>

<style lang="stylus" scoped>
.list-container
  padding 16rpx 32rpx 50rpx
.loading
  width 100%
  height 70vh
  display flex
  align-items center
  justify-content center
.van-swipe-cell__right
  width 65px
  height 100%
  background-color #ee0a24
  color #ffffff
  display flex
  align-items center
  justify-content center
</style>

<script type="application/json">
  {
    "usingComponents": {
      "van-tab": "@vant/weapp/tab/index",
      "van-tabs": "@vant/weapp/tabs/index",
      "van-empty": "@vant/weapp/empty/index",
      "van-loading": "@vant/weapp/loading/index",
      "custom-container": "@/compontens/base/custom-container",
      "card": "@/subpackages/homepage/compontens/base/card.mpx"
    },
    "navigationStyle": "custom"
  }
</script>
