<template>
  <view style="margin-top: 32rpx">
    <van-cell-group inset style="margin-top: 32rpx">
      <van-field
        label="描述信息"
        value="{{ submitObj.text }}"
        placeholder="公司描述"
        border="{{ false }}"
        bind:change="onChange"
        type="textarea"
        id="text"
      />
      <van-field
        label="电话"
        value="{{ submitObj.phone }}"
        placeholder="电话号码"
        border="{{ false }}"
        bind:change="onChange"
        type="number"
        id="phone"
      />
      <van-field
        label="微信"
        value="{{ submitObj.wechat }}"
        placeholder="微信"
        border="{{ false }}"
        bind:change="onChange"
        type="textarea"
        id="wechat"
      />
      <van-field
        label="邮箱"
        value="{{ submitObj.email }}"
        placeholder="邮箱"
        border="{{ false }}"
        bind:change="onChange"
        type="textarea"
        id="email"
      />
    </van-cell-group>
    <view class="submit">
      <van-button type="primary" block round bind:tap="submitData">确认</van-button>
    </view>
    </view>
  </view>
</template>

<script setup lang="ts">
import mpx, { reactive, onMounted } from '@mpxjs/core'
import { getComPanyInfo, updateComPanyInfo } from '@/api'
interface SubmitObj {
  text: string
  wechat: string
  email: string
  phone: string
}
const submitObj = reactive<SubmitObj>({
  text: '',
  wechat: '',
  email: '',
  phone: ''
})
onMounted(async() => {
  const res = await getComPanyInfo()
  Object.keys(submitObj).forEach(item => {
    submitObj[item] = res?.data?.[item]
  })
})
const onChange = e => {
  submitObj[e.target.id] = e.detail
}
const submitData = async() => {
  mpx.showLoading({
    title: '更改中……',
    mask: true
  })
  const res = await updateComPanyInfo(submitObj)
  mpx.showToast({
    title: res.code === 200 ? '更新成功' : '更新失败，请联系开发者',
    icon: res.code === 200 ? 'success' : 'error',
    mask: true
  })
}
defineExpose({
  submitObj,
  submitData,
  onChange
})
</script>

<style lang="stylus">
.submit
  padding 32rpx
  margin-top 64rpx
</style>

<script type="application/json">
  {
    "usingComponents": {
    },
    "componentPlaceholder": {
    }
  }
</script>
