<template>
  <table-list
    btn="添加分类"
    bind:btnclick="showPopup"
    list="{{class_list}}"
    showListLoading="{{loadingList}}"
    bind:edit="changeName"
    bind:delete="deleteItem"
  />
  <popup-container
    title="{{popupTitle}}"
    show="{{show}}"
    height="40%"
    isLoading="{{isLoading}}"
    bind:cancel="cancelPopup"
    bind:confirm="confirmPopup"
  >
    <van-cell-group inset>
      <van-field
        value="{{ classValue }}"
        label="分类名"
        placeholder="请输入分类名"
        border="{{ false }}"
        bind:change="onChange"
        maxlength="10"
        clearable
        required
      />
    </van-cell-group>
    <view class="text">备注： 修改暂时不会显示在页面中，需要添加产品，并将产品添加到分类中去</view>
  </popup-container>
</template>

<script>
import mpx, { createComponent } from '@mpxjs/core'
import { getClassManagerList, addClassManagerItem, updateClassManagerItem, deleteClassManagerItem } from '@/api'
import store from '@/store'
import Mstore from '../store'
import Dialog from '@vant/weapp/dialog/dialog'

createComponent({
  data: {
    show: false,
    classValue: '',
    isLoading: false,
    loadingList: false,
    popupTitle: '新建'
  },
  computed: {
    ...store.mapState(['navBarStyle']),
    ...Mstore.mapState(['class_list'])
  },
  ready() {
    this.getList()
  },
  methods: {
    ...Mstore.mapActions(['getClassList']),
    async getList() {
      this.loadingList = true
      const res = await this.getClassList()
      this.loadingList = false
    },
    showPopup() {
      this.popupTitle = '新增分类'
      this.show = true
    },
    onChange(e) {
      this.classValue = e.detail
    },
    cancelPopup() {
      this.show = false
      this.classValue = ''
    },
    async confirmPopup() {
      if (!this.classValue) {
        mpx.showToast({
          title: '请先填写分类名',
          duration: 1000,
          icon: 'none',
          mask: false
        })
        return
      }
      this.isLoading = true
      this._id ? await updateClassManagerItem({
        name: this.classValue,
        _id: this._id
      }) : await addClassManagerItem({
        name: this.classValue
      })
      this.getList()
      this._id = ''
      this.isLoading = false
      this.show = false
      this.classValue = ''
    },
    changeName(e) {
      const item = e.detail
      this.popupTitle = `编辑${item.name}`
      this.classValue = item.name
      this.show = true
      this._id = item._id
    },
    async deleteItem(e) {
      const item = e.detail
      await deleteClassManagerItem({
        _id: item._id
      })
      this.getList()
    }
  }
})

</script>

<style lang="stylus">
.text
  font-size 28rpx
  color #666
  padding 0 32rpx
  margin-top 20rpx
  color red
</style>

<script type="application/json">
  {
    "usingComponents": {
      "van-button": "@vant/weapp/button/index",
      "van-cell": "@vant/weapp/cell/index",
      "van-cell-group": "@vant/weapp/cell-group/index",
      "van-field": "@vant/weapp/field/index",
      "popup-container": "./base/popup-container.mpx",
      "table-list": "./base/table-list.mpx"
    }
  }
</script>
